<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bullet_testx</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>obj_blockbullet</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>down= 0;
if(instance_exists(264/* obj_greenspeargen */))
    rating= obj_greenspeargen.rating;
else  rating= 10;
image_speed= 0;
countdown= instance_number(object_index);
if(countdown &lt;= 1) image_index= 1;
part= 0;
site= choose(0, 1, 2, 3);
alarm[0]= 1;
active= 0;
speedmod= 1;
alphoid= 0;
image_alpha= 0;
object0= 263;
dmg= 7;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(site == 0) truesite= 1;
if(site == 1) truesite= 0;
if(site == 2) truesite= 3;
if(site == 3) truesite= 2;
image_index= truesite;
if(site == 0) {
    x= obj_spearblocker.x - 300;
    y= obj_spearblocker.y;
}
if(site == 1) {
    x= object0.x + 300;
    y= object0.y;
}
if(site == 2) {
    x= object0.x;
    y= object0.y + 300;
}
if(site == 3) {
    x= object0.x;
    y= object0.y - 300;
}
move_towards_point(object0.x, object0.y, 8 * speedmod);
active= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(active == 1) {
    if(site == 0 &amp;&amp; x &gt; object0.x - 80 &amp;&amp; part == 0)
        part= 1;
    if(site == 1 &amp;&amp; x &lt; object0.x + 80 &amp;&amp; part == 0)
        part= 1;
    if(site == 2 &amp;&amp; y &lt; object0.y + 80 &amp;&amp; part == 0)
        part= 1;
    if(site == 3 &amp;&amp; y &gt; object0.y - 80 &amp;&amp; part == 0)
        part= 1;
    rater= 10;
    r2= 20;
    if(part == 1) {
        siner= 0;
        part= 2;
        speed= 0;
        remx= x;
        remy= y;
        xrate= 0;
        if(rating &gt; 8) xrate= rating - 8;
        totalx= 145 + xrate * 8;
    }
    if(down == 1) {
        countdown--;
        down= 0;
    }
    if(part == 2) {
        siner++;
        if(site == 0) {
            x= remx + sin(siner * 3.14159265358979 / r2) * totalx;
            y= remy - sin(siner * 3.14159265358979 / rater) * 100;
            if(siner == rater) {
                part= 3;
                hspeed= -8 * speedmod;
            }
        }
        if(site == 1) {
            x= remx - sin(siner * 3.14159265358979 / r2) * totalx;
            y= remy - sin(siner * 3.14159265358979 / rater) * 100;
            if(siner == rater) {
                part= 3;
                hspeed= 8 * speedmod;
            }
        }
        if(site == 2) {
            y= remy - sin(siner * 3.14159265358979 / r2) * totalx;
            x= remx - sin(siner * 3.14159265358979 / rater) * 100;
            if(siner == rater) {
                part= 3;
                vspeed= 8 * speedmod;
            }
        }
        if(site == 3) {
            y= remy + sin(siner * 3.14159265358979 / r2) * totalx;
            x= remx + sin(siner * 3.14159265358979 / rater) * 100;
            if(siner == rater) {
                part= 3;
                vspeed= -8 * speedmod;
            }
        }
    }
}
if(alphoid &lt; 1) alphoid+= 0.2;
image_alpha= alphoid;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(138/* spr_bullet_testx_arrow */, image_index, x, y, 1, 1, 0, 16777215, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
