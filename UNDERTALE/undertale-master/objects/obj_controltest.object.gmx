<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_roachdance</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.starton9= 1;
buffer= 3;
z_index= 0;
x_index= 0;
c_index= 0;
s_snare= caster_load("music/drum/snare.ogg");
s_kick= caster_load("music/drum/kick.ogg");
s_cymbal= caster_load("music/drum/cymbal.ogg");
s_cuica= caster_load("music/drum/cuica.ogg");
s_cuica2= caster_load("music/drum/cuica2.ogg");
fun= 0;
if(file_exists("undertale.ini")) {
    fun= 1;
    ini_open("undertale.ini");
    tr= ini_read_real("EndF", "EndF", -1);
    if(tr &gt;= 2) fun= 0;
}
image_speed= 0;
borderl= 60;
borderr= 260;
borderu= 140;
if(fun == 0) tile_layer_hide(1100000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>caster_free(s_snare);
caster_free(s_kick);
caster_free(s_cymbal);
caster_free(s_cuica);
caster_free(s_cuica2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z_index= 0;
x_index= 0;
c_index= 0;
buffer--;
if(buffer &lt; 0) {
    if(keyboard_multicheck(0/* NOKEY */)) z_index= 2;
    else  {
        if(z_index == 1) z_index= 3;
    }
    if(keyboard_multicheck_pressed(0/* NOKEY */)) {
        if(fun == 1) {
            image_index++;
            caster_play(s_snare, 1, 1);
        }
        z_index= 1;
    }
    if(keyboard_multicheck(1/* ANYKEY */)) x_index= 2;
    else  {
        if(x_index == 1) x_index= 3;
    }
    if(keyboard_multicheck_pressed(1/* ANYKEY */)) {
        if(fun == 1) {
            image_index++;
            caster_play(s_kick, 1, 1);
        }
        x_index= 1;
    }
    if(keyboard_multicheck(2/* UNKNOWN(2) */)) c_index= 2;
    else  {
        if(c_index == 1) c_index= 3;
    }
    if(keyboard_multicheck_pressed(2/* UNKNOWN(2) */)) {
        if(fun == 1) {
            image_index++;
            caster_play(s_cymbal, 1, 1);
        }
        c_index= 1;
    }
    if(keyboard_check_pressed(82/* R */) &amp;&amp; fun == 1) {
        image_index++;
        caster_play(s_cuica, 1, 1);
    }
    if(keyboard_check_pressed(69/* E */) &amp;&amp; fun == 1) {
        image_index++;
        caster_play(s_cuica2, 1, 1);
    }
}
draw_sprite_ext(846/* spr_test_zbutton */, z_index, 80, 30, 2, 2, 0, 16777215, 1);
draw_sprite_ext(847/* spr_test_xbutton */, x_index, 140, 30, 2, 2, 0, 16777215, 1);
draw_sprite_ext(848/* spr_test_cbutton */, c_index, 200, 30, 2, 2, 0, 16777215, 1);
if(fun == 1)
    draw_sprite(sprite_index, image_index, x, y);
else  {
    draw_set_color(32768);
    draw_circle(x + 16, y + 16, 16, 1);
    draw_circle(x + 16, y + 16, 14, 1);
    draw_circle(x + 16, y + 16, 12, 1);
    draw_set_color(0);
    draw_circle(x + 16, y + 16, 17, 1);
    draw_circle(x + 16, y + 16, 15, 1);
    draw_circle(x + 16, y + 16, 13, 1);
}
draw_set_color(16777215);
i= 0;
while(i &lt; 6) {
    draw_rectangle(borderl - i, borderu - i, borderr + i, 300, 1);
    i++;
}
if(keyboard_check(37/* LEFT */)) x-= 3;
if(keyboard_check(39/* RIGHT */)) x+= 3;
if(keyboard_check(40/* DOWN */)) y+= 3;
if(keyboard_check(38/* UP */)) y-= 3;
if(x &lt;= borderl) x= borderl;
if(x &gt;= borderr - 32) x= borderr - 32;
if(y &lt;= borderu) y= borderu;
if(y &gt;= 240) room_goto(288);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
