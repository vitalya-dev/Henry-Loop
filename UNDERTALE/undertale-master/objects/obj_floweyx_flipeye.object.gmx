<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_flipeye_holder</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_floweybodyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner= 0;
image_blend= 16777215;
md= 0;
con= 0;
siner2= random(300);
gr= 16777215;
grgr= 16777215;
grgrgr= 16777215;
grgrgrgr= 16777215;
oner= 0;
durara= 0;
frozen= 0;
desperate= 1;
wimpy= 0;
event_user(4);
saved= 0;
memorymode= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>con++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(saved == 1) {
    durara= save_durara;
    oner= save_oner;
    alarm[4]= save_alarm;
    siner2= save_siner2;
    md= save_md;
    con= save_con;
    gr= save_gr;
    grgr= save_grgr;
    grgrgr= save_grgrgr;
    scr_floweybodyload();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>save_durara= durara;
save_oner= oner;
save_alarm= alarm[4];
save_siner2= siner2;
save_md= md;
save_con= con;
save_gr= gr;
save_grgr= grgr;
save_grgrgr= grgrgr;
scr_floweybodysave();
saved= 1;
memorymode= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(con == 0) con= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(con == 0) {
    if(frozen == 0) siner++;
    else  {
        if(frozen != 4) y= ystart + random(4) - random(4);
    }
}
if(con == 1) {
    con= 3;
    alarm[4]= 4;
}
if(global.debug == 1 &amp;&amp; keyboard_check_pressed(82/* R */)) con= 1;
if(con == 3) {
    siner2+= 1.2;
    md= 1;
    gr= make_color_rgb(170 + sin(siner2 / 2) * 70, 170 + sin((siner2 + 3) / 2) * 70, 170 + sin((siner2 + 6) / 2) * 70);
    grgr= make_color_rgb(170 + sin((siner2 + 1) / 2) * 70, 170 + sin((siner2 + 4) / 2) * 70, 170 + sin((siner2 + 7) / 2) * 70);
    grgrgr= make_color_rgb(170 + sin((siner2 + 2) / 2) * 70, 170 + sin((siner2 + 4) / 2) * 70, 170 + sin((siner2 + 8) / 2) * 70);
}
if(con == 4) {
    con= 5;
    durara= 0;
    oner= choose(0, 1);
    alarm[4]= 7;
    image_blend= 16777215;
}
if(con == 5) {
    opx= 0;
    eba= instance_create(x, y, 1636/* obj_eyeshot_a */);
    eba.memorymode= memorymode;
    eba.durara= durara;
    eba.oner= oner;
    if(wimpy == 0) {
        with(eba) {
            move_towards_point(obj_vsflowey_heart.x + 8, obj_vsflowey_heart.y + 8, 7 - durara * 0.1);
            friction= -0.2 + durara * 0.012;
            direction-= 18 * durara;
            if(oner == 1) direction+= 9;
        }
    }
    if(wimpy == 1) {
        with(eba) {
            move_towards_point(obj_vsflowey_heart.x + 8, obj_vsflowey_heart.y + 8, 3 - durara * 0.1);
            friction= -0.1 - durara * 0.02;
            direction-= 18 * durara;
            if(oner == 1) direction+= 14;
        }
    }
    opx= op;
    ebb= instance_create(x + opx, y, 1636/* obj_eyeshot_a */);
    ebb.memorymode= memorymode;
    ebb.durara= durara;
    ebb.oner= oner;
    if(wimpy == 0) {
        with(ebb) {
            move_towards_point(obj_vsflowey_heart.x + 8, obj_vsflowey_heart.y + 8, 7 - durara * 0.1);
            friction= -0.2 + durara * 0.012;
            direction+= 18 * durara;
            if(oner == 1) direction+= 9;
        }
    }
    if(wimpy == 1) {
        with(ebb) {
            move_towards_point(obj_vsflowey_heart.x + 8, obj_vsflowey_heart.y + 8, 3 - durara * 0.1);
            friction= -0.1 - durara * 0.02;
            direction+= 18 * durara;
            if(oner == 1) direction+= 14;
        }
    }
    durara++;
    md= 1;
    if(gr == 16777215) {
        gr= 255;
        grgr= 0;
        grgrgr= 0;
    } else  {
        gr= 16777215;
        grgr= 16777215;
        grgrgr= 16777215;
    }
}
if(con == 6) {
    gr= 16777215;
    grgr= 16777215;
    grgrgr= 16777215;
    md= 0;
    image_blend= 16777215;
    con= 0;
}
if(con == 10) {
    siner2+= 1.2;
    md= 1;
    gr= make_color_rgb(170 + sin(siner2 / 2) * 70, 170 + sin((siner2 + 3) / 2) * 70, 170 + sin((siner2 + 6) / 2) * 70);
    grgr= make_color_rgb(170 + sin((siner2 + 1) / 2) * 70, 170 + sin((siner2 + 4) / 2) * 70, 170 + sin((siner2 + 7) / 2) * 70);
    grgrgr= make_color_rgb(170 + sin((siner2 + 2) / 2) * 70, 170 + sin((siner2 + 4) / 2) * 70, 170 + sin((siner2 + 8) / 2) * 70);
}
if(desperate == 1 &amp;&amp; frozen == 0) siner+= 0.5;
draw_sprite_ext(2169/* spr_flipeye_holder_bg */, image_index, x, y + cos(siner / 3) * 2, 0.8, 0.8, sin(siner / 4) * 2, grgrgrgr, 1);
draw_sprite_ext(2166/* spr_flipeye_bg */, image_index, x - 5, y + cos(siner / 3) * 3, 1, 1, sin(siner / 4) * 2, grgrgrgr, 1);
if(md == 0) {
    draw_sprite_ext(2171/* spr_flipeye_noiris */, image_index, x, -4 + y + sin(siner / 3) * 2, 0.8, 0.8, sin(siner / 2) * 4, image_blend, 1);
    draw_sprite_ext(2175/* spr_flipeye_iris */, image_index, x, -6 + y + sin(siner / 3) * 4, 0.8, 0.8, sin(siner / 2) * 4, image_blend, 1);
    if(desperate == 0)
        draw_sprite_ext(2173/* spr_flipeye_pupil */, image_index, x, -5 + y + sin(siner / 3) * 2, 0.8 - sin(siner / 3) * 0.4, 1 - sin(siner / 3) * 0.4, 0, image_blend, 1);
    if(desperate == 1) {
        if(frozen == 0 || frozen == 4)
            draw_sprite_ext(2173/* spr_flipeye_pupil */, image_index, x, -5 + y + sin(siner / 3) * 2.5, 0.8 - sin(siner / 3) * 0.3, 0.8 - sin(siner / 3) * 0.3, 0, image_blend, 1);
        else 
            draw_sprite_ext(2173/* spr_flipeye_pupil */, image_index, x, -5 + y + sin(siner / 3) * 2.5, 0.7 - sin(siner / 3) * 0.1, 0.7 - sin(siner / 3) * 0.1, 0, image_blend, 1);
    }
}
if(md == 1) {
    draw_sprite_ext(2172/* spr_flipeye_noiris_flash */, image_index, x, -4 + y + sin(siner / 3) * 2, 0.8, 0.8, sin(siner / 2) * 4, grgrgr, 1);
    draw_sprite_ext(2176/* spr_flipeye_iris_flash */, image_index, x, -6 + y + sin(siner / 3) * 4, 0.8, 0.8, sin(siner / 2) * 4, grgr, 1);
    draw_sprite_ext(2174/* spr_flipeye_pupil_flash */, image_index, x, -5 + y + sin(siner / 3) * 2, 0.8 - sin(siner / 3) * 0.4, 1 - sin(siner / 3) * 0.4, 0, gr, 1);
}
draw_sprite_ext(2168/* spr_flipeye_holder */, image_index, x, y + cos(siner / 3) * 2, 0.8, 0.8, sin(siner / 4) * 2, image_blend, 1);
op= 126;
draw_sprite_ext(2169/* spr_flipeye_holder_bg */, image_index, x + op, y + cos(siner / 3) * 2, -0.8, 0.8, -sin(siner / 4) * 2, grgrgrgr, 1);
draw_sprite_ext(2166/* spr_flipeye_bg */, image_index, x + 5 + op, y + cos(siner / 3) * 3, -1, 1, sin(siner / 4) * 2, grgrgrgr, 1);
if(md == 0) {
    draw_sprite_ext(2171/* spr_flipeye_noiris */, image_index, x + op, -4 + y + sin(siner / 3) * 2, -0.8, 0.8, -sin(siner / 2) * 4, image_blend, 1);
    draw_sprite_ext(2175/* spr_flipeye_iris */, image_index, x + op, -6 + y + sin(siner / 3) * 4, -0.8, 0.8, -sin(siner / 2) * 4, image_blend, 1);
    if(desperate == 0)
        draw_sprite_ext(2173/* spr_flipeye_pupil */, image_index, x + op, -5 + y + sin(siner / 3) * 2, -1 + cos(siner / 3) * 0.4, 1 - cos(siner / 3) * 0.4, 0, image_blend, 1);
    if(desperate == 1) {
        if(frozen == 0 || frozen == 4)
            draw_sprite_ext(2173/* spr_flipeye_pupil */, image_index, x + op, -5 + y + sin(siner / 3) * 2.5, -0.9 + cos(siner / 3) * 0.3, 0.9 - cos(siner / 3) * 0.3, 0, image_blend, 1);
        else 
            draw_sprite_ext(2173/* spr_flipeye_pupil */, image_index, x + op, -5 + y + sin(siner / 3) * 2.5, -0.7 + cos(siner / 3) * 0.1, 0.7 - cos(siner / 3) * 0.1, 0, image_blend, 1);
    }
}
if(md == 1) {
    draw_sprite_ext(2172/* spr_flipeye_noiris_flash */, image_index, x + op, -4 + y + sin(siner / 3) * 2, -0.8, 0.8, -sin(siner / 2) * 4, grgrgr, 1);
    draw_sprite_ext(2176/* spr_flipeye_iris_flash */, image_index, x + op, -6 + y + sin(siner / 3) * 4, -0.8, 0.8, -sin(siner / 2) * 4, grgr, 1);
    draw_sprite_ext(2174/* spr_flipeye_pupil_flash */, image_index, x + op, -5 + y + sin(siner / 3) * 2, -1 + cos(siner / 3) * 0.4, 1 - cos(siner / 3) * 0.4, 0, gr, 1);
}
draw_sprite_ext(2168/* spr_flipeye_holder */, image_index, x + op, y + cos(siner / 3) * 2, -0.8, 0.8, -sin(siner / 4) * 2, image_blend, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
