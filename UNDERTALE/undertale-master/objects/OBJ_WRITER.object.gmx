<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>writingx= 0;
writingy= 0;
SCR_TEXTTYPE(global.typer);
x= round(x);
y= round(y);
doak= 0;
stringno= 0;
stringpos= 1;
lineno= 0;
halt= 0;
writingx= round(writingx);
writingy= round(writingy);
myx= writingx;
myy= writingy;
script_execute(1/* SCR_TEXT */, global.msc);
n= 0;
while(global.msg[n] != "%%%") {
    mystring[n]= global.msg[n];
    n++;
}
originalstring= mystring[0];
dfy= 0;
alarm[0]= textspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(stringpos &lt; string_length(originalstring)) {
    stringpos++;
    if(global.typer == 111) stringpos++;
    alarm[0]= textspeed;
    if(string_char_at(originalstring, stringpos) == "^" &amp;&amp; string_char_at(originalstring, stringpos + 1) != "0") {
        n= real(string_char_at(originalstring, stringpos + 1));
        alarm[0]= n * 10;
    } else  {
        if(txtsound == 56 || txtsound == 65 || txtsound == 71) {
            if(txtsound == 56) {
                if(string_char_at(originalstring, stringpos) != "" &amp;&amp; string_char_at(originalstring, stringpos) != "^" &amp;&amp; string_char_at(originalstring, stringpos) != "/" &amp;&amp; string_char_at(originalstring, stringpos) != "%") {
                    snd_stop(56);
                    snd_stop(57);
                    snd_stop(58);
                    snd_stop(59);
                    snd_stop(60);
                    snd_stop(61);
                    snd_stop(62);
                    snd_stop(63);
                    snd_stop(64);
                    rnsound= floor(random(9));
                    switch(rnsound) {
                        case 8:
                            snd_play(56/* snd_mtt1 */);
                            break;
                        case 7:
                            snd_play(57/* snd_mtt2 */);
                            break;
                        case 6:
                            snd_play(58/* snd_mtt3 */);
                            break;
                        case 5:
                            snd_play(59/* snd_mtt4 */);
                            break;
                        case 4:
                            snd_play(60/* snd_mtt5 */);
                            break;
                        case 3:
                            snd_play(61/* snd_mtt6 */);
                            break;
                        case 2:
                            snd_play(62/* snd_mtt7 */);
                            break;
                        case 1:
                            snd_play(63/* snd_mtt8 */);
                            break;
                        case 0:
                            snd_play(64/* snd_mtt9 */);
                            break;
                    }
                }
                stringpos+= 2;
            }
            if(txtsound == 71 &amp;&amp; string_char_at(originalstring, stringpos) != "" &amp;&amp; string_char_at(originalstring, stringpos) != "^" &amp;&amp; string_char_at(originalstring, stringpos) != "/" &amp;&amp; string_char_at(originalstring, stringpos) != "%") {
                snd_stop(71);
                snd_stop(72);
                snd_stop(73);
                snd_stop(74);
                snd_stop(75);
                snd_stop(76);
                snd_stop(77);
                rnsound= floor(random(7));
                switch(rnsound) {
                    case 6:
                        snd_play(71/* snd_wngdng1 */);
                        break;
                    case 5:
                        snd_play(72/* snd_wngdng2 */);
                        break;
                    case 4:
                        snd_play(73/* snd_wngdng3 */);
                        break;
                    case 3:
                        snd_play(74/* snd_wngdng4 */);
                        break;
                    case 2:
                        snd_play(75/* snd_wngdng5 */);
                        break;
                    case 1:
                        snd_play(76/* snd_wngdng6 */);
                        break;
                    case 0:
                        snd_play(77/* snd_wngdng7 */);
                        break;
                }
            }
            if(txtsound == 65) {
                if(string_char_at(originalstring, stringpos) != "" &amp;&amp; string_char_at(originalstring, stringpos) != "^" &amp;&amp; string_char_at(originalstring, stringpos) != "/" &amp;&amp; string_char_at(originalstring, stringpos) != "%") {
                    snd_stop(65);
                    snd_stop(66);
                    snd_stop(67);
                    snd_stop(68);
                    snd_stop(69);
                    snd_stop(70);
                    rnsound= floor(random(6));
                    switch(rnsound) {
                        case 5:
                            snd_play(65/* snd_tem */);
                            break;
                        case 4:
                            snd_play(66/* snd_tem2 */);
                            break;
                        case 3:
                            snd_play(67/* snd_tem3 */);
                            break;
                        case 2:
                            snd_play(68/* snd_tem4 */);
                            break;
                        case 1:
                            snd_play(69/* snd_tem5 */);
                            break;
                        case 0:
                            snd_play(70/* snd_tem6 */);
                            break;
                    }
                }
                stringpos++;
            }
        } else  {
            if(string_char_at(originalstring, stringpos) != "" &amp;&amp; string_char_at(originalstring, stringpos) != " " &amp;&amp; string_char_at(originalstring, stringpos) != "&amp;" &amp;&amp; string_char_at(originalstring, stringpos) != "^" &amp;&amp; string_char_at(originalstring, stringpos - 1) != "^" &amp;&amp; string_char_at(originalstring, stringpos) != "\" + chr(ord('"')) &amp;&amp; string_char_at(originalstring, stringpos - 1) != "\" + chr(ord('"')) &amp;&amp; string_char_at(originalstring, stringpos) != "/" &amp;&amp; string_char_at(originalstring, stringpos) != "%") {
                snd_stop(txtsound);
                snd_play(txtsound);
            }
        }
    }
    if(string_char_at(originalstring, stringpos) == "&amp;")
        stringpos++;
    if(string_char_at(originalstring, stringpos) == "\" + chr(ord('"'))+ " + ")
        stringpos+= 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myletter= string_char_at(originalstring, stringpos);
if(shake &gt; 38) {
    speed= 2;
    direction+= 20;
}
if(shake == 42) {
    speed= 4;
    direction-= 19;
}
if(halt == 3 || dfy == 1) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_multicheck_pressed(0/* NOKEY */) == 1) event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(halt == 1) {
    myletter= " ";
    stringpos= 1;
    stringno++;
    originalstring= mystring[stringno];
    myx= writingx;
    myy= writingy;
    lineno= 0;
    halt= 0;
    alarm[0]= textspeed;
}
if(halt == 2) instance_destroy();
if(halt == 4) {
    global.myfight= 0;
    global.mnfight= 1;
    keyboard_clear(13/* ENTER */);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myx= writingx;
myy= writingy;
n= 1;
while(n &lt; stringpos + 1) {
    nskip= 0;
    if(string_char_at(originalstring, n) == "&amp;") {
        script_execute(148/* SCR_NEWLINE */);
        n++;
    }
    if(string_char_at(originalstring, n) == "^") {
        if(string_char_at(originalstring, n + 1) == "0") nskip= 1;
        else  n+= 2;
    }
    if(string_char_at(originalstring, n) == "\" + chr(ord('"'))+ " + ") {
        if(string_char_at(originalstring, n + 1) == "R")
            mycolor= 255;
        if(string_char_at(originalstring, n + 1) == "G")
            mycolor= 65280;
        if(string_char_at(originalstring, n + 1) == "W")
            mycolor= 16777215;
        if(string_char_at(originalstring, n + 1) == "Y")
            mycolor= 65535;
        if(string_char_at(originalstring, n + 1) == "X")
            mycolor= 0;
        if(string_char_at(originalstring, n + 1) == "B")
            mycolor= 16711680;
        if(string_char_at(originalstring, n + 1) == "O")
            mycolor= 4235519;
        if(string_char_at(originalstring, n + 1) == "L")
            mycolor= 16754964;
        if(string_char_at(originalstring, n + 1) == "P")
            mycolor= 16711935;
        if(string_char_at(originalstring, n + 1) == "p")
            mycolor= 13941759;
        if(string_char_at(originalstring, n + 1) == "C" &amp;&amp; global.inbattle == 0) {
            if(!instance_exists(783/* obj_choicer */))
                choicer= instance_create(0, 0, 783/* obj_choicer */);
            choicer.creator= id;
            halt= 5;
        }
        if(string_char_at(originalstring, n + 1) == "M") {
            global.flag[20]= real(string_char_at(originalstring, n + 2));
            n++;
        }
        if(string_char_at(originalstring, n + 1) == "E") {
            global.faceemotion= real(string_char_at(originalstring, n + 2));
            n++;
        }
        if(string_char_at(originalstring, n + 1) == "F") {
            global.facechoice= real(string_char_at(originalstring, n + 2));
            global.facechange= 1;
            n++;
        }
        if(string_char_at(originalstring, n + 1) == "T") {
            newtyper= string_char_at(originalstring, n + 2);
            if(newtyper == "T") global.typer= 4;
            if(newtyper == "t") global.typer= 48;
            if(newtyper == "0") global.typer= 5;
            if(newtyper == "S") global.typer= 10;
            if(newtyper == "F") global.typer= 16;
            if(newtyper == "s") global.typer= 17;
            if(newtyper == "P") global.typer= 18;
            if(newtyper == "M") global.typer= 27;
            if(newtyper == "U") global.typer= 37;
            if(newtyper == "A") global.typer= 47;
            if(newtyper == "a") global.typer= 60;
            if(newtyper == "R") global.typer= 76;
            script_execute(150/* SCR_TEXTTYPE */, global.typer);
            global.facechange= 1;
            n++;
        }
        if(string_char_at(originalstring, n + 1) == "z") {
            sym= real(string_char_at(originalstring, n + 2));
            sym_s= 837;
            if(sym == 4) sym_s= 837;
            if(sym == 4)
                draw_sprite_ext(sym_s, 0, myx + random(shake) - shake / 2, myy + 10 + random(shake) - shake / 2, 2, 2, 0, 16777215, 1);
            n++;
        }
        n+= 2;
    }
    if(string_char_at(originalstring, n) == "/") {
        halt= 1;
        if(string_char_at(originalstring, n + 1) == "%") halt= 2;
        if(string_char_at(originalstring, n + 1) == "^" &amp;&amp; string_char_at(originalstring, n + 2) != "0")
            halt= 4;
        if(string_char_at(originalstring, n + 1) == "*") halt= 6;
        break;
    } else  {
        if(string_char_at(originalstring, n) == "%") {
            if(string_char_at(originalstring, n + 1) == "%") {
                instance_destroy();
                break;
            } else  {
                stringpos= 1;
                stringno++;
                originalstring= mystring[stringno];
                myx= writingx;
                myy= writingy;
                lineno= 0;
                alarm[0]= textspeed;
                myletter= " ";
                break;
            }
        } else  {
            if(myx &gt; writingxend) script_execute(148/* SCR_NEWLINE */);
            myletter= string_char_at(originalstring, n);
            if(global.typer == 18) {
                if(myletter == "l" || myletter == "i") myx+= 2;
                if(myletter == "I") myx+= 2;
                if(myletter == "!") myx+= 2;
                if(myletter == ".") myx+= 2;
                if(myletter == "S") myx++;
                if(myletter == "?") myx+= 2;
                if(myletter == "D") myx++;
                if(myletter == "A") myx++;
                if(myletter == "\'") myx++;
            }
            draw_set_font(myfont);
            draw_set_color(mycolor);
            if(shake &gt; 38) {
                if(shake == 39) {
                    direction+= 10;
                    draw_text(myx + hspeed, myy + vspeed, myletter);
                }
                if(shake == 40)
                    draw_text(myx + hspeed, myy + vspeed, myletter);
                if(shake == 41) {
                    direction+= 10 * n;
                    draw_text(myx + hspeed, myy + vspeed, myletter);
                    direction-= 10 * n;
                }
                if(shake == 42) {
                    direction+= 20 * n;
                    draw_text(myx + hspeed, myy + vspeed, myletter);
                    direction-= 20 * n;
                }
                if(shake == 43) {
                    direction+= 30 * n;
                    draw_text(myx + hspeed * 0.7 + 10, myy + vspeed * 0.7, myletter);
                    direction-= 30 * n;
                }
            } else 
                draw_text(myx + random(shake) - shake / 2, myy + random(shake) - shake / 2, myletter);
            myx+= spacing;
            if(myfont == 8) {
                if(myletter == "w") myx+= 2;
                if(myletter == "m") myx+= 2;
                if(myletter == "i") myx-= 2;
                if(myletter == "l") myx-= 2;
                if(myletter == "s") myx--;
                if(myletter == "j") myx--;
            }
            if(myfont == 9) {
                if(myletter == "D") myx++;
                if(myletter == "Q") myx+= 3;
                if(myletter == "M") myx++;
                if(myletter == "L") myx--;
                if(myletter == "K") myx--;
                if(myletter == "C") myx++;
                if(myletter == ".") myx-= 3;
                if(myletter == "!") myx-= 3;
                if(myletter == "O" || myletter == "W") myx+= 2;
                if(myletter == "I") myx-= 6;
                if(myletter == "T") myx--;
                if(myletter == "P") myx-= 2;
                if(myletter == "R") myx-= 2;
                if(myletter == "A") myx++;
                if(myletter == "H") myx++;
                if(myletter == "B") myx++;
                if(myletter == "G") myx++;
                if(myletter == "F") myx--;
                if(myletter == "?") myx-= 3;
                if(myletter == "\'") myx-= 6;
                if(myletter == "J") myx--;
            }
            n+= nskip;
            n++;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
