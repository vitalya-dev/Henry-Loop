<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goalhud</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x= view_xview[0] - 103;
y= view_yview[0] + 40;
hspeed= 8;
friction= 0.3;
con= 0;
if(instance_exists(1185/* obj_jetpackchara */)) {
    dist= obj_jetpackchara.dist;
    maxdist= obj_jetpackchara.maxdist;
    time= obj_jetpackchara.timertime;
    inittime= obj_jetpackchara.timertime;
} else  {
    dist= 0;
    maxdist= 400;
    time= 600;
    inittime= 600;
}
finished= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y= view_yview[0] + 40;
if(con == 0 &amp;&amp; x &gt;= view_xview[0]) {
    x= view_xview[0];
    hspeed= 0;
    friction= 0;
    con= 1;
}
if(instance_exists(1185/* obj_jetpackchara */)) {
    time= obj_jetpackchara.timertime;
    dist= obj_jetpackchara.dist;
} else  {
    dist++;
    time--;
}
draw_sprite(1685/* spr_goalhud */, 0, x, y);
ballx= (maxdist - dist) / maxdist * 27;
draw_sprite(1686/* spr_goalhud_ball */, 0, x + 62 + ballx, y + 5);
pizzax= (inittime - time) / inittime * 9;
draw_sprite(1687/* spr_timehud */, 0, x, y + 30);
draw_sprite(1684/* spr_pizzaclock */, pizzax, x + 62, y + 33);
thisnum= ceil(time / 30);
if(thisnum &gt;= 0) {
    place= 0;
    numadd= 10;
    if(thisnum &gt;= numadd) {
        while(thisnum &gt;= numadd) {
            place++;
            numadd*= 10;
        }
    }
} else  {
    thisnum= 0;
    place= 0;
}
thisnum2= thisnum;
i= place;
while(i &gt;= 0) {
    numnum[i]= floor(thisnum2 / power(10, i));
    thisnum2-= numnum[i] * power(10, i);
    i--;
}
i= place;
while(i &gt;= 0) {
    draw_set_color(255);
    draw_sprite(1683/* spr_digitalnumber */, numnum[i], x + 92 - i * 9, y + 34);
    i--;
}
if(finished == 1) {
    hspeed-= 0.5;
    if(x &lt; -110) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
