<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bridgeseed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99999</depth>
  <persistent>0</persistent>
  <parentName>obj_interactable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myinteract= 0;
image_speed= 0;
using= 0;
dir= 99;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>using= 7;
move_snap(20, 20);
block= instance_position(x + 10, y + 10, 820);
if(block != -4) {
    if(instance_exists(1111/* obj_bellblossom */)) {
        obj_bellblossom.block2= block;
        // obj_bellblossom
        with(1111) event_user(0);
    }
    block.x= 0;
    block.y= 0;
}
using= 99;
image_speed= 0;
image_index= 6;
depth= 800000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(1110/* obj_waterboardpuzzle1 */)) {
    if(myinteract == 1 &amp;&amp; using == 0 &amp;&amp; obj_waterboardpuzzle1.waterboard == 0) {
        if(snd_isplaying(112/* snd_movemenu */) == 0) snd_play(112/* snd_movemenu */);
        using= 1;
        obj_waterboardpuzzle1.waterboard= 1;
        myinteract= 0;
        solid= 0;
    } else  {
        if(myinteract == 1 &amp;&amp; using == 0) myinteract= 0;
    }
}
if(myinteract == 1 &amp;&amp; using == 1) {
    x-= 40;
    // obj_mainchara
    with(1570) {
        if(global.facing == 2 &amp;&amp; collision_rectangle(x + 4, y + sprite_height - 5, x + sprite_width - 4, y + 5, 1368, 0, 1)) {
            interactedobject= collision_rectangle(x + 4, y + sprite_height - 5, x + sprite_width - 4, y + 8, 1368, 0, 1);
            if(interactedobject != -4) {
                with(interactedobject) facing= 0;
                with(interactedobject) script_execute(111/* scr_interact */);
            }
        }
    }
    myinteract= 0;
    x+= 40;
}
if(using == 1) {
    global.encounter= 0;
    x= obj_mainchara.x;
    y= obj_mainchara.y - 10;
    depth= obj_mainchara.depth - 2;
    if(global.interact == 0 &amp;&amp; keyboard_multicheck_pressed(0/* NOKEY */) == 1) {
        if(global.facing == 0) {
            j= instance_position(obj_mainchara.x + 10, obj_mainchara.y + 40, 1363);
            h= instance_position(obj_mainchara.x + 10, obj_mainchara.y + 40, 1114);
            g= instance_position(obj_mainchara.x + 10, obj_mainchara.y + 40, 1112);
            if(h == -4 &amp;&amp; j == -4 &amp;&amp; g != -4) {
                y= obj_mainchara.y + 30;
                move_snap(20, 20);
                using= 2;
                dir= 0;
            }
        }
        if(global.facing == 2) {
            g= instance_position(obj_mainchara.x + 10, obj_mainchara.y, 1112);
            if(g != -4 &amp;&amp; !collision_point(obj_mainchara.x + 10, obj_mainchara.y, 1114, 0, 1)) {
                y= obj_mainchara.y;
                move_snap(20, 20);
                using= 2;
                dir= 2;
            }
        }
        if(global.facing == 1) {
            j= instance_position(obj_mainchara.x + 30, obj_mainchara.y + 20, 1363);
            h= instance_position(obj_mainchara.x + 30, obj_mainchara.y + 20, 1114);
            g= instance_position(obj_mainchara.x + 30, obj_mainchara.y + 20, 1112);
            if(j == -4 &amp;&amp; h == -4 &amp;&amp; g != -4) {
                y= obj_mainchara.y + 10;
                x= obj_mainchara.x + 20;
                move_snap(20, 20);
                using= 2;
                dir= 1;
            }
        }
        if(global.facing == 3) {
            j= instance_position(obj_mainchara.x - 10, obj_mainchara.y + 20, 1363);
            h= instance_position(obj_mainchara.x - 10, obj_mainchara.y + 20, 1114);
            g= instance_position(obj_mainchara.x - 10, obj_mainchara.y + 20, 1112);
            if(j == -4 &amp;&amp; h == -4 &amp;&amp; g != -4) {
                y= obj_mainchara.y + 10;
                x= obj_mainchara.x - 20;
                move_snap(20, 20);
                using= 2;
                dir= 3;
            }
        }
        if(using == 2) obj_waterboardpuzzle1.waterboard= 0;
    }
}
if(using == 2) {
    depth= 900000;
    if(dir == 2) {
        y-= 2;
        if(instance_position(x + 10, y - 2, 1363) != -4) using= 3;
        if(instance_position(x + 10, y - 2, 1113) != -4) using= 3;
        if(instance_position(x + 10, y - 2, 1114) != -4) using= 3;
    }
    if(dir == 1) {
        x+= 2;
        if(instance_position(x + 20, y + 10, 1363) != -4) using= 3;
        if(instance_position(x + 20, y + 10, 1113) != -4) using= 3;
        if(instance_position(x + 20, y + 10, 1114) != -4) using= 3;
    }
    if(dir == 0) {
        y+= 2;
        if(instance_position(x + 10, y + 22, 1363) != -4) using= 3;
        if(instance_position(x + 10, y + 22, 1113) != -4) using= 3;
        if(instance_position(x + 10, y + 22, 1114) != -4) using= 3;
    }
    if(dir == 3) {
        x-= 2;
        if(instance_position(x - 2, y + 10, 1363) != -4) using= 3;
        if(instance_position(x - 2, y + 10, 1113) != -4) using= 3;
        if(instance_position(x - 2, y + 10, 1114) != -4) using= 3;
    }
    if(using == 3) move_snap(20, 20);
}
if(using == 5) {
    image_speed= 0.17;
    alarm[2]= 30;
    using= 6;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
