<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_asgore_swipe_nospear</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_asgorebulparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x+= 180;
i= 0;
while(i &lt; 10) {
    type[i]= 1;
    i++;
}
type[0]= 1;
type[1]= choose(1, 2);
type[2]= 2;
type[3]= choose(1, 2);
type[4]= 1;
type[5]= choose(1, 2);
amt= 2;
curamt= 0;
initswipewait= 8;
swipewait= 0;
swipetimer= 0;
image_speed= 0;
image_xscale= 2;
image_yscale= 2;
con= 0;
quick= 0;
cutspeed= 0.5;
hitted= 0;
cutsfx= caster_load("music/sfx_cinematiccut.ogg");
cutsfxN= 0;
cutsfxI[0]= cutsfx;
obj_asgorespear.visible= 0;
cutsdone= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>caster_free(cutsfx);
obj_asgoreb_body.visible= 1;
obj_asgorespear.visible= 1;
obj_asgorespear.color= 255;
obj_asgorespear.armtest= 1;
global.turntimer= -1;
global.mnfight= 3;
global.myfight= -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>curamt++;
if(curamt &lt; amt) {
    image_index= 0;
    image_speed= 1;
    alarm[1]= swipewait;
    if(curamt &gt; 1 &amp;&amp; curamt &lt; amt) {
        if(image_xscale == 2) image_xscale= -2;
        else  image_xscale= 2;
    }
} else  {
    image_speed= 0;
    alarm[2]= 15;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[1]= initswipewait;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_index &gt;= 5 &amp;&amp; image_index &lt; 6) {
    if(cutsdone == 0) {
        cutsfxN++;
        cutsfxA[cutsfxN]= cutsfx;
        cutsfxA[cutsfxN - 1]= cutsfx;
        if(cutsfxN &gt; 1) caster_stop(cutsfxA[cutsfxN - 1]);
        caster_play(cutsfxA[cutsfxN], 0.8, 1);
        cutsdone= 1;
    }
    if(type[curamt] == 1 &amp;&amp; hitted == 0) {
        hit= 1;
        if(abs(obj_heart.x - obj_heart.xprevious) &lt; 0.1) hit= 0;
        if(!keyboard_check(37/* LEFT */) &amp;&amp; !keyboard_check(39/* RIGHT */) &amp;&amp; !keyboard_check(38/* UP */) &amp;&amp; !keyboard_check(40/* DOWN */))
            hit= 0;
        if(hit == 1) {
            event_user(0);
            hitted= 1;
        }
    }
    if(type[curamt] == 2 &amp;&amp; hitted == 0) {
        hit= 1;
        if(abs(obj_heart.x - obj_heart.xprevious) &gt; 0.1) hit= 0;
        if(keyboard_check_pressed(37/* LEFT */) || keyboard_check_pressed(39/* RIGHT */) || keyboard_check_pressed(38/* UP */) || keyboard_check_pressed(40/* DOWN */))
            hit= 0;
        if(hit == 1) {
            event_user(0);
            hitted= 1;
        }
    }
    hitted= 2;
} else  cutsdone= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(con == 0) {
    swipetimer++;
    if(swipetimer &gt; initswipewait) con= 1;
    if(quick &gt; 0) {
        image_index= 2;
        con= 1;
    }
}
if(con == 2) {
    if(image_xscale == 2) image_xscale= -2;
    else  image_xscale= 2;
    con= 3;
    hitted= 0;
    image_speed= 0;
    image_index= 0;
    swipetimer= 0;
    curamt++;
}
if(con == 3) {
    if(curamt &gt; amt) {
        con= 99;
        alarm[2]= 45;
    } else  {
        swipetimer++;
        image_speed= 0;
        image_index= 0;
        if(swipetimer &gt; swipewait) {
            con= 1;
            if(quick &gt; 1) image_index= 2;
        }
    }
}
if(con == 1) {
    image_index+= cutspeed;
    if(image_index &gt;= 6) {
        con= 2;
        swipetimer= 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_index &gt;= 5 &amp;&amp; image_index &lt; 6) {
    if(type[curamt] == 1) {
        draw_set_color(16754964);
        draw_rectangle(global.idealborder[0], global.idealborder[2], global.idealborder[1], global.idealborder[3], 0);
    }
    if(type[curamt] == 2) {
        draw_set_color(4235519);
        draw_rectangle(global.idealborder[0], global.idealborder[2], global.idealborder[1], global.idealborder[3], 0);
    }
}
draw_sprite_ext(635/* spr_asgore_swipe_nospear */, image_index, x, y, image_xscale, image_yscale, 0, 16777215, 1);
if(type[curamt] == 0) image_blend= 255;
if(type[curamt] == 1) image_blend= 16754964;
if(type[curamt] == 2) image_blend= 4235519;
draw_sprite_ext(634/* spr_asgore_swipe_spear */, image_index, x, y, image_xscale, image_yscale, 0, image_blend, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
