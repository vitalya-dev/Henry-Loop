<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_aaron</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>obj_monsterparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.plot &lt; 201) global.plot= 201;
scr_monstersetup();
image_speed= 0;
part1= 517;
mypart1= instance_create(x, y, part1);
alarm[9]= 8;
hurtanim= 0;
hurtsound= 96;
talked= 0;
whatiheard= -1;
attacked= 0;
killed= 0;
global.heard= 0;
takedamage= 0;
mercymod= -99999;
sha= 0;
shb= 0;
ht= 100;
wd= 120;
con= 1;
alarm[4]= 30;
obj_borderparent.visible= 0;
global.mnfight= 99;
global.myfight= 99;
global.faceemotion= 4;
normalfight= 0;
obj_heart.visible= 0;
beamsfx= caster_load("music/sfx/sfx_rainbowbeam_1.ogg");
beamsfx_a= caster_load("music/sfx/sfx_a_gigatalk.ogg");
beam_up_sfx= caster_load("music/sfx/sfx_segapower.ogg");
cutsfx= caster_load("music/sfx/sfx_cinematiccut.ogg");
p_cut= 0;
p_beam= 0;
p_power= 0;
hit_try= 0;
hit_reached= 0;
timer_on= 0;
turn= 0;
turns= 0;
part= 0;
skip= 0;
if(skip == 0) {
    birdnoise= caster_load("music/birdnoise.ogg");
    caster_loop(birdnoise, 1, 1);
}
if(skip == 1) {
    con= -1;
    with(mypart1) bounce= 1;
    obj_borderparent.visible= 1;
    global.msg[0]= "* Skipped ahead.";
    global.mnfight= 3;
    global.myfight= 0;
    global.faceemotion= 0;
    normalfight= 1;
    obj_heart.visible= 1;
    global.flag[271]= 1;
    caster_loop(global.batmusic, 0.95, 0.95);
}
drama= 0;
mercy_death= 0;
nx= 0;
global.seriousbattle= 1;
ini_open("undertale.ini");
ini_f= ini_read_real("Sans", "F", 0);
intro= ini_read_real("Sans", "Intro", 0);
ini_write_real("Sans", "F", ini_f + 1);
ini_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mercymod &gt; 10 &amp;&amp; global.monsterhp[myself] == global.monstermaxhp[myself])
    global.goldreward[3]+= 40;
scr_monsterdefeat(0, 0, 0, 0, 0);
with(mypart1) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mypart1.parent= global.monsterinstance[myself];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sm= 0;
gg= floor(random(3));
mycommand= round(random(100));
global.msg[0]= "del";
global.msg[1]= "%%%";
yoff= 0;
if(hit_try &gt; hit_reached) {
    if(hit_try == 1) {
        global.faceemotion= 3;
        global.flag[20]= 1;
        global.msg[0]= "what^1?&amp;you think i\'m just&amp;gonna stand there&amp;and take it?/%%";
    }
    if(hit_try == 2) {
        global.msg[0]= "our reports showed&amp;a massive anomaly&amp;in the timespace&amp;continuum./";
        global.msg[1]= "timelines jumping&amp;left and right,&amp;stopping and&amp;starting.../%%";
    }
    if(hit_try == 3)
        global.msg[0]= "\\E4until suddenly^1,&amp;everything ends./%%";
    if(hit_try == 4) {
        global.msg[0]= "\\E4heh heh heh.../";
        global.msg[1]= "\\E5that\'s your fault^1,&amp;isn\'t it?/%%";
    }
    if(hit_try == 5)
        global.msg[0]= "\\E1you can\'t understand&amp;how this feels./%%";
    if(hit_try == 6) {
        global.msg[0]= "\\E4knowing that one&amp;day^1, without any&amp;warning.../";
        global.msg[1]= "\\E9it\'s all going to&amp;be reset./%%";
    }
    if(hit_try == 7) {
        global.flag[20]= 1;
        global.msg[0]= "\\E9look^1.&amp;i gave up trying&amp;to go back a long&amp;time ago./%%";
    }
    if(hit_try == 8) {
        global.flag[20]= 1;
        global.msg[0]= "\\E4and getting to the&amp;surface doesn\'t&amp;really appeal&amp;anymore^1, either./%%";
    }
    if(hit_try == 9) {
        global.flag[20]= 1;
        global.msg[0]= "\\E4cause even if we&amp;do.../";
        global.msg[1]= "\\E5we\'ll just end up&amp;right back here^1,&amp;without any memory&amp;of it^1, right?/%%";
    }
    if(hit_try == 10) {
        global.flag[20]= 1;
        global.msg[0]= "\\E1to be blunt.../";
        global.msg[1]= "\\E4it makes it kind&amp;of hard to give&amp;it my all./%%";
    }
    if(hit_try == 11) {
        global.flag[20]= 1;
        global.msg[0]= "\\E1... or is that just&amp;a poor excuse for&amp;being lazy...?/";
        global.msg[1]= "\\E3hell if i know./%%";
    }
    if(hit_try == 12) {
        global.flag[20]= 1;
        global.msg[0]= "\\E4all i know is..^1.&amp;seeing what comes&amp;next.../";
        global.msg[1]= "\\E9i can\'t afford not&amp;to care anymore./%%";
    }
    if(hit_try == 13) {
        global.flag[20]= 0;
        with(mypart1) sweat= 2;
        caster_pause(global.batmusic);
        drama= 1;
        obj_heart.speed= 0;
        ini_open("undertale.ini");
        SS= ini_read_real("Sans", "SS", 0);
        MP= ini_read_real("Sans", "MP", 0);
        ini_write_real("Sans", "MP", MP + 1);
        ini_close();
        global.msg[0]= "\\E9ugh..^1.&amp;that being said.../";
        global.msg[1]= "\\E1you^1, uh^1, really&amp;like swinging that&amp;thing around^1,&amp;huh?/";
        global.msg[2]= "\\E0.../";
        global.msg[3]= "\\E4listen./";
        global.msg[4]= "i know you didn\'t&amp;answer me before^1,&amp;but.../";
        global.msg[5]= "\\E4somewhere in&amp;there^1.&amp;i can feel it./";
        global.msg[6]= "\\E0there\'s a glimmer&amp;of a good person&amp;inside of you./";
        global.msg[7]= "\\E4the memory of&amp;someone who once&amp;wanted to do the&amp;right thing./";
        global.msg[8]= "\\E1someone who^1, in&amp;another time^1,&amp;might have even&amp;been.../";
        global.msg[9]= "\\E4a friend?/";
        global.msg[10]= "\\E3c\'mon^1, buddy./";
        global.msg[11]= "\\E0do you remember&amp;me?/";
        global.msg[12]= "\\E4please^1, if you\'re&amp;listening.../";
        global.msg[13]= "\\E9let\'s forget all&amp;this^1, ok?/";
        global.msg[14]= "\\E3just lay down&amp;your weapon^1, and.../";
        global.msg[15]= "\\E4well^1, my job&amp;will be a lot&amp;easier./%%";
        if(SS &gt; 0) {
            global.msg[0]= "\\E9ugh..^1.&amp;that being said.../";
            global.msg[1]= "\\E1you^1, uh^1, really&amp;like swinging that&amp;thing around^1,&amp;huh?/";
            global.msg[2]= "\\E0.../";
            global.msg[3]= "\\E4listen./";
            global.msg[4]= "friendship.../";
            global.msg[5]= "\\E3it\'s really great^1,&amp;right?/";
            global.msg[6]= "let\'s quit fighting./%%";
        }
        mercymod= 999999;
    }
    if(hit_try == 14) {
        ini_open("undertale.ini");
        SS= ini_read_real("Sans", "SS", 0);
        SS2= ini_read_real("Sans", "SS2", 0);
        if(SS &gt; 0) ini_write_real("Sans", "SS2", SS2 + 1);
        ini_close();
        if(drama == 2) caster_free(d_music);
        global.flag[20]= 1;
        global.msg[0]= "\\E3welp^1, it was&amp;worth a shot./";
        global.msg[1]= "\\E5guess you like&amp;doing things the&amp;hard way^1, huh?/%%";
        if(SS &gt; 0 &amp;&amp; SS2 == 0) {
            global.msg[0]= "\\E3woah^1, you look&amp;REALLY pissed off.../";
            global.msg[1]= "\\E4heheheh.../";
            global.msg[2]= "\\E5did i getcha?/";
            global.msg[3]= "\\E4well^1, if you came&amp;back anyway.../";
            global.msg[4]= "\\E1i guess that means&amp;we never really&amp;WERE friends^1, huh?/";
            global.msg[5]= "\\E4heh./";
            global.msg[6]= "\\E9don\'t tell that&amp;to the other&amp;sans-es^1, ok?/%%";
        }
        mercymod= 999999;
    }
    if(hit_try == 15) {
        global.msg[0]= "\\E4sounds strange^1, but&amp;before all this i&amp;was secretly hoping&amp;we could be friends./";
        global.msg[1]= "\\E1i always thought the&amp;anomaly was doing&amp;this cause they&amp;were unhappy./";
        global.msg[2]= "and when they got&amp;what they wanted^1,&amp;they would stop&amp;all this./%%";
    }
    if(hit_try == 16) {
        global.msg[0]= "\\E3and maybe all they&amp;needed was..^1.&amp;i dunno./";
        global.msg[1]= "\\M1some good food^1,&amp;some bad laughs^1,&amp;some nice friends./%%";
    }
    if(hit_try == 17) {
        global.msg[0]= "\\E4but that\'s&amp;ridiculous^1,&amp;right?/";
        global.msg[1]= "\\E5yeah^1, you\'re the&amp;type of person&amp;who won\'t EVER&amp;be happy./%%";
    }
    if(hit_try == 18) {
        global.msg[0]= "\\E5you\'ll keep&amp;consuming timelines&amp;over and over^1,&amp;until.../";
        global.msg[1]= "\\E4well./";
        global.msg[2]= "\\M1hey./";
        global.msg[3]= "\\E3take it from me^1,&amp;kid./";
        global.msg[4]= "someday.../";
        global.msg[5]= "you gotta learn&amp;when to QUIT./%%";
    }
    if(hit_try == 19) global.msg[0]= "\\E3and that day\'s&amp;TODAY./%%";
    if(hit_try == 20) {
        with(mypart1) sweat= 1;
        global.msg[0]= "\\E4cause..^1.&amp;y\'see../";
        global.msg[1]= "\\E1all this fighting&amp;is really tiring&amp;me out./%%";
    }
    if(hit_try == 21) {
        with(mypart1) sweat= 1;
        global.msg[0]= "\\E4and if you keep&amp;pushing me.../";
        global.msg[1]= "\\Xt\\E3hen i\'ll be&amp;forced to use my\\R &amp;special attack\\X./%%";
    }
    if(hit_try == 22) {
        with(mypart1) sweat= 2;
        global.msg[0]= "\\Xy\\E3eah^1, my \\Rspecial&amp;attack\\X.&amp;sound familiar?/";
        global.msg[1]= "\\Xw\\E1ell^1, get ready^1.&amp;cause after the&amp;next move^1, i\'m&amp;going to \\Ruse it\\X./";
        global.msg[2]= "\\E3so^1, if you don\'t&amp;wanna see it^1, now&amp;would be a good&amp;time to die./%%";
    }
    if(hit_try == 23) {
        with(mypart1) sweat= 0;
        global.msg[0]= "\\E4well^1, here goes&amp;nothing.../";
        global.msg[1]= "\\E3are you ready?/";
        global.msg[2]= "\\Xs\\E5urvive THIS^1, and&amp;i\'ll show you my\\R &amp;special attack\\X!/%%";
    }
    hit_reached= hit_try;
}
if(mercy_death == 1) {
    global.flag[272]= 1;
    caster_free(-3);
    global.flag[20]= 0;
    global.faceemotion= 4;
    global.msg[0]= ".../";
    global.msg[1]= "you\'re sparing me?/";
    global.msg[2]= "\\E1finally./";
    global.msg[3]= "\\E3buddy^1.&amp;pal./";
    global.msg[4]= "\\E4i know how hard&amp;it must be.../";
    global.msg[5]= "to make that&amp;choice./";
    global.msg[6]= "to go back on&amp;everything you\'ve&amp;worked up to./";
    global.msg[7]= "\\E0i want you to&amp;know..^1.&amp;i won\'t let it&amp;go to waste./";
    global.msg[8]= "\\M1.../";
    global.msg[9]= "\\E3c\'mere^1, pal./%%";
    ini_open("undertale.ini");
    SS= ini_read_real("Sans", "SS", 0);
    ini_write_real("Sans", "SS", SS + 1);
    ini_close();
}
global.typer= 109;
global.border= 35;
a_choose= 0;
if(hit_try &lt; 13) {
    global.flag[271]= 1;
    a_choose= part;
    if(part &gt;= 13) a_choose= 10;
    if(a_choose == 0) global.border= 35;
    if(a_choose == 1) global.border= 35;
    if(a_choose == 2) global.border= 35;
    if(a_choose == 3) global.border= 35;
    if(a_choose == 4) global.border= 35;
    if(a_choose == 5) global.border= 35;
    if(a_choose == 6) global.border= 39;
    if(a_choose == 7) global.border= 35;
    if(a_choose == 8) global.border= 39;
    if(a_choose == 9) global.border= 35;
    if(a_choose == 10) global.border= 35;
    if(a_choose == 11) global.border= 35;
    if(a_choose == 12) global.border= 35;
    obj_heart.movement= 2;
    obj_heart.sprite_index= 40/* spr_heartblue */;
}
if(hit_try &gt;= 14 &amp;&amp; hit_try &lt; 23 &amp;&amp; nx == 1) {
    obj_heart.movement= 1;
    obj_heart.sprite_index= 34/* spr_heart */;
    c_choose= 0;
    if(part == 0) global.border= 37;
    if(part == 1) global.border= 0;
    if(part == 2) global.border= 36;
    if(part == 3) global.border= 36;
    if(part == 4) global.border= 37;
    if(part == 5) global.border= 36;
    if(part == 6) global.border= 0;
    if(part == 7) global.border= 36;
    if(part &gt;= 8) c_choose= choose(3, 1, 2);
    if(c_choose == 3) global.border= 37;
    if(c_choose == 1 || c_choose == 2) global.border= 36;
}
if(hit_try == 23) {
    global.border= 36;
    obj_heart.movement= 1;
    obj_heart.sprite_index= 34/* spr_heart */;
}
if(mercy_death == 1) {
    global.border= 38;
    SCR_BORDERSETUP();
    obj_heart.speed= 0;
}
obj_heart.x= round((global.idealborder[0] + global.idealborder[1]) / 2);
obj_heart.y= round((global.idealborder[2] + global.idealborder[3]) / 2) - 8;
if(obj_heart.movement == 2) {
    // obj_heart
    with(743) {
        y= global.idealborder[3] - 15;
        speed= 0;
        jumpstage= 1;
    }
}
if(global.border == 39) obj_heart.y= global.idealborder[3] - 70;
if(mercy_death == 1) {
    obj_heart.x= round((global.idealborder[0] + global.idealborder[1]) / 2) - 8;
    obj_heart.y= round((global.idealborder[2] + global.idealborder[3]) / 2) - 8;
    obj_heart.sprite_index= 34/* spr_heart */;
    obj_heart.movement= 1;
}
// obj_menubone
with(505) terminate= 1;
// obj_menubone_bottom
with(504) terminate= 1;
// obj_menubone_maker
with(510) instance_destroy();
SCR_BORDERSETUP();
yoff= 250 - global.idealborder[2];
if(yoff &lt; 0) yoff= 0;
if(sm == 1)
    blcon= instance_create(x + 120, y - yoff, 186/* obj_blconsm */);
else  blcon= instance_create(x + 120, y - yoff, 187/* obj_blconwdflowey */);
blconwd= instance_create(blcon.x + 30, blcon.y + 10, 784/* OBJ_NOMSCWRITER */);
if(global.msg[0] == "del") {
    with(blconwd) instance_destroy();
    with(blcon) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(blconwd) instance_destroy();
with(blcon) instance_destroy();
talked= 0;
global.faceemotion= 0;
global.flag[20]= 0;
global.mnfight= 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>con++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mypart1.pause != 1) {
    dmgwriter= instance_create(x + sprite_width / 2 - 48, y - 50, 189/* obj_dmgwriter */);
    global.damage= 0;
    with(dmgwriter) dmg= 0;
    mypart1.pause= 1;
    hit_try++;
    alarm[8]= 11;
}
if(sha == 0) sha= x;
x= sha + shudder;
if(shudder &lt; 0) shudder= -(shudder + 1);
else  shudder= -shudder;
if(shudder == 0) {
    sha= 0;
    global.hurtanim[myself]= 2;
    exit;
} else  {
    alarm[3]= 2;
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.mnfight == 3) attacked= 0;
if(alarm[5] &gt; 0) {
    if(global.monster[0] == 1 &amp;&amp; global.monsterinstance[0].alarm[5] &gt; alarm[5])
        alarm[5]= global.monsterinstance[0].alarm[5];
    if(global.monster[1] == 1 &amp;&amp; global.monsterinstance[1].alarm[5] &gt; alarm[5])
        alarm[5]= global.monsterinstance[1].alarm[5];
    if(global.monster[2] == 1 &amp;&amp; global.monsterinstance[2].alarm[5] &gt; alarm[5])
        alarm[5]= global.monsterinstance[2].alarm[5];
}
if(global.mnfight == 1 &amp;&amp; talked == 0) {
    alarm[5]= 15;
    alarm[6]= 1;
    talked= 1;
    global.heard= 0;
}
if(talked == 1 &amp;&amp; instance_exists(782/* OBJ_WRITER */)) {
    scr_textskip();
    if(alarm[5] &lt;= 3) alarm[5]= 3;
}
if(global.hurtanim[myself] == 1) {
    shudder= 8;
    alarm[3]= global.damagetimer;
    global.hurtanim[myself]= 3;
}
if(global.hurtanim[myself] == 2) {
    with(dmgwriter) alarm[2]= 15;
    global.hurtanim[myself]= 0;
    mypart1.pause= 0;
    global.myfight= 0;
    global.mnfight= 1;
}
if(global.hurtanim[myself] == 5) {
    global.damage= 0;
    instance_create(x + sprite_width / 2 - 48, y - 24, 189/* obj_dmgwriter */);
    // obj_dmgwriter
    with(189) alarm[2]= 30;
    global.myfight= 0;
    global.mnfight= 1;
    global.hurtanim[myself]= 0;
}
if(global.mnfight == 2 &amp;&amp; normalfight == 1) {
    if(attacked == 0) {
        global.flag[271]= 1;
        if(global.sp &lt; 5) global.sp= 5;
        global.turntimer= 10;
        timer_on= 1;
        if(mercy_death == 0) {
            if(hit_try &lt; 13) {
                obj_heart.movement= 2;
                obj_heart.sprite_index= 40/* spr_heartblue */;
                if(part == 0) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 0;
                        event_user(0);
                    }
                }
                if(part == 1) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 3;
                        event_user(0);
                    }
                }
                if(part == 2) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 23;
                        event_user(0);
                    }
                }
                if(part == 3) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 6;
                        event_user(0);
                    }
                }
                if(part == 4) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 7;
                        event_user(0);
                    }
                }
                if(part == 5) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 8;
                        event_user(0);
                    }
                }
                if(part == 6) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 17;
                        event_user(0);
                    }
                }
                if(part == 7) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 15;
                        event_user(0);
                    }
                }
                if(part == 8) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 18;
                        event_user(0);
                    }
                }
                if(part == 9) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 1;
                        event_user(0);
                    }
                }
                if(part == 10) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 5;
                        event_user(0);
                    }
                }
                if(part == 11) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 21;
                        event_user(0);
                    }
                }
                if(part == 12) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 16;
                        event_user(0);
                    }
                }
                if(part &gt;= 13) {
                    b_choose= choose(0, 1, 2, 3);
                    if(b_choose == 0) {
                        // obj_sansb_body
                        with(517) {
                            a_type= 1;
                            event_user(0);
                        }
                    }
                    if(b_choose == 1) {
                        // obj_sansb_body
                        with(517) {
                            a_type= 5;
                            event_user(0);
                        }
                    }
                    if(b_choose == 2) {
                        // obj_sansb_body
                        with(517) {
                            a_type= 21;
                            event_user(0);
                        }
                    }
                    if(b_choose == 3) {
                        // obj_sansb_body
                        with(517) {
                            a_type= 16;
                            event_user(0);
                        }
                    }
                }
                if(global.border == 39) {
                    obj_heart.y= global.idealborder[3] - 70;
                    obj_heart.vspeed= 2;
                }
            }
            if(hit_try &gt;= 14 &amp;&amp; hit_try &lt; 23 &amp;&amp; nx == 1) {
                global.turntimer= 20;
                timer_on= 0;
                obj_heart.movement= 1;
                obj_heart.sprite_index= 34/* spr_heart */;
                if(part == 0) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 12;
                        event_user(0);
                    }
                    timer_on= 1;
                }
                if(part == 1) {
                    shadow= instance_create(0, 0, 511/* obj_sansshadowgen */);
                    shadow.level= 1;
                    shadow.shadow_max= 5;
                }
                if(part == 2) {
                    // obj_sansb_body
                    with(517) {
                        smasher= 1;
                        smashlv= 0;
                        smashcon= 0;
                    }
                }
                if(part == 3) {
                    // obj_sansb_body
                    with(517) {
                        smasher= 1;
                        smashlv= 1;
                        smashcon= 0;
                    }
                }
                if(part == 4) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 13;
                        event_user(0);
                    }
                    timer_on= 1;
                }
                if(part == 5) {
                    // obj_sansb_body
                    with(517) {
                        a_type= 22;
                        event_user(0);
                    }
                    timer_on= 1;
                }
                if(part == 6) {
                    shadow= instance_create(0, 0, 511/* obj_sansshadowgen */);
                    with(shadow) alarm[0]= 4;
                    shadow.level= 2;
                    shadow.shadow_max= 6;
                }
                if(part == 7) {
                    // obj_sansb_body
                    with(517) {
                        smasher= 1;
                        smashlv= 2;
                        smashcon= 0;
                    }
                }
                if(part &gt;= 8) {
                    if(c_choose == 1) {
                        // obj_sansb_body
                        with(517) {
                            smasher= 1;
                            smashlv= 2;
                            smashcon= 0;
                        }
                    }
                    if(c_choose == 2) {
                        shadow= instance_create(0, 0, 511/* obj_sansshadowgen */);
                        with(shadow) alarm[0]= 4;
                        shadow.level= 2;
                        shadow.shadow_max= 6;
                    }
                    if(c_choose == 3) {
                        // obj_sansb_body
                        with(517) {
                            a_type= 13;
                            event_user(0);
                        }
                        timer_on= 1;
                    }
                }
            }
            if(hit_try == 23) {
                global.border= -1;
                // obj_sansb_body
                with(517) lac= 4;
                // obj_borderparent
                with(757) instaborder= 1;
                timer_on= 0;
                obj_heart.x= round((global.idealborder[0] + global.idealborder[1]) / 2);
                obj_heart.y= round((global.idealborder[2] + global.idealborder[3]) / 2) - 8;
            }
            if(hit_try == 14 &amp;&amp; nx == 0) {
                nx= 1;
                mercymod= -10000;
                caster_resume(global.batmusic);
                part= -1;
                shadow= instance_create(0, 0, 511/* obj_sansshadowgen */);
                shadow.level= 0;
                shadow.shadow_max= 5;
                timer_on= 0;
            }
        } else  {
            mercymod= -999999;
            timer_on= 0;
            obj_heart.x= round((global.idealborder[0] + global.idealborder[1]) / 2) - 8;
            obj_heart.y= round((global.idealborder[2] + global.idealborder[3]) / 2) - 8;
            obj_heart.sprite_index= 34/* spr_heart */;
            obj_heart.movement= 1;
            // obj_sansb_body
            with(517) {
                a_type= 20;
                event_user(0);
            }
        }
        turns++;
        part++;
        if(hit_try &lt; 4 &amp;&amp; mycommand &gt;= 0)
            global.msg[0]= "* Just keep attacking.";
        if(hit_try &gt;= 4 &amp;&amp; mycommand &gt;= 0)
            global.msg[0]= "* Sans\'s movements grow a&amp;  little wearier.";
        if(hit_try &gt;= 8 &amp;&amp; mycommand &gt;= 0)
            global.msg[0]= "* Sans\'s movements seem to be&amp;  slower.";
        if(hit_try &gt;= 13 &amp;&amp; mycommand &gt;= 0)
            global.msg[0]= "* Felt like a turning point.";
        if(global.km &gt;= 0)
            global.msg[0]= "* You felt your sins crawling&amp;  on your back.";
        if(global.km &gt;= 10)
            global.msg[0]= "* You felt your sins weighing&amp;  on your neck.";
        if(global.km &gt;= 20)
            global.msg[0]= "* KARMA coursing through your&amp;  veins.";
        if(global.km &gt;= 30) global.msg[0]= "* Doomed to death of KARMA!";
        if(hit_try == 15 &amp;&amp; mycommand &gt;= 0)
            global.msg[0]= "* The REAL battle finally begins.";
        if(hit_try &gt;= 19 &amp;&amp; mycommand &gt;= 0)
            global.msg[0]= "* Reading this doesn\'t seem&amp;  like the best use of time.";
        if(hit_try &gt;= 20 &amp;&amp; mycommand &gt;= 0)
            global.msg[0]= "* Sans is starting to look&amp;  really tired.";
        if(hit_try &gt;= 21 &amp;&amp; mycommand &gt;= 0)
            global.msg[0]= "* Sans is preparing something.";
        if(hit_try &gt;= 22 &amp;&amp; mycommand &gt;= 0)
            global.msg[0]= "* Sans is getting ready to&amp;  use his special attack.";
        attacked= 1;
    }
    if(mercymod == 999999) {
        obj_heart.speed= 0;
        global.msg[0]= "* Sans is sparing you.";
        global.turntimer= -1;
        global.mnfight= 3;
    }
    whatiheard= -1;
}
if(global.myfight == 2 &amp;&amp; whatiheard != -1 &amp;&amp; global.heard == 0) {
    if(whatiheard == 0) {
        global.msc= 0;
        if(hit_try &gt; 0) {
            global.msg[0]= "* SANS 1 ATK 1 DEF&amp;* The easiest enemy^1.&amp;* Can only deal 1 damage./";
            global.msg[1]= "* Can\'t keep dodging forever^1.&amp;* Keep attacking./^";
        } else 
            global.msg[0]= "* SANS 1 ATK 1 DEF&amp;* The easiest enemy^1.&amp;* Can only deal 1 damage./^";
        OBJ_WRITER.halt= 3;
        iii= instance_create(global.idealborder[0], global.idealborder[2], 782/* OBJ_WRITER */);
        with(iii) halt= 0;
        whatiheard= 9;
    }
    global.heard= 1;
}
if(global.myfight == 4 &amp;&amp; global.mercyuse == 0) {
    script_execute(163/* scr_mercystandard */);
    if(mercy &lt; 0) mercy_death= 1;
}
if(mercymod == 222 &amp;&amp; !instance_exists(782/* OBJ_WRITER */)) {
    script_execute(163/* scr_mercystandard */);
    if(mercy &lt; 0) mercy_death= 1;
}
if(con == 1 &amp;&amp; skip == 0) {
    // OBJ_WRITER
    with(782) instance_destroy();
    global.mnfight= 99;
    global.myfight= 99;
    obj_heart.visible= 0;
    global.sp= 5;
}
if(con == 1 &amp;&amp; skip == 1) {
    global.mnfight= 99;
    global.myfight= 99;
    caster_loop(global.batmusic, 0.9, 0.95);
    global.sp= 5;
    // OBJ_WRITER
    with(782) instance_destroy();
    with(mypart1) fac= 20;
}
if(con == 2) {
    global.msc= 0;
    global.typer= 107;
    global.msg[0]= "it\'s a beautiful&amp;day outside./";
    global.msg[1]= "birds are singing^1,&amp;flowers are&amp;blooming.../";
    global.msg[2]= "on days like these^1,&amp;kids like you.../%%";
    if(intro == 1) {
        global.msg[0]= "it\'s a beautiful&amp;day outside./";
        global.msg[1]= "birds are singing^1,%%";
    }
    if(intro &gt;= 2) global.msg[0]= "ready?/%%";
    con= 3;
    scr_blcon_x(x + 120, y);
}
if(con == 3 &amp;&amp; !instance_exists(782/* OBJ_WRITER */)) {
    con= 5;
    alarm[4]= 10;
    if(intro &gt;= 1) alarm[4]= 2;
}
if(con == 6) {
    caster_stop(birdnoise);
    snd_play(106/* snd_noise */);
    blk= scr_marker(-10, -10, 996);
    blk.image_xscale= 999;
    blk.image_yscale= 999;
    blk.depth= -9999;
    global.bmenuno= 999;
    // obj_borderparent
    with(757) instaborder= 1;
    global.border= -1;
    global.idealborder[0]= 240;
    global.idealborder[1]= 400;
    global.idealborder[2]= global.idealborder[3] - 160;
    obj_heart.x= global.idealborder[0] + 75;
    obj_heart.y= global.idealborder[2] + 75;
    con= 7;
    alarm[4]= 8;
    if(intro &gt;= 1) alarm[4]= 2;
}
if(con == 8) {
    global.faceemotion= 5;
    global.flag[271]= 1;
    obj_heart.visible= 1;
    with(blk) instance_destroy();
    snd_play(106/* snd_noise */);
    normalfight= 0;
    global.myfight= -1;
    global.mnfight= 2;
    con= 9;
    obj_borderparent.visible= 1;
    alarm[4]= 20;
    if(intro &gt;= 1) {
        con= 11;
        alarm[4]= -1;
    }
}
if(con == 10) {
    global.typer= 108;
    global.msg[0]= "Should&amp;be&amp;burning&amp;in hell./%%";
    con= 11;
    scr_blcon_x(x + 120, y - 30);
    blcon.sprite_index= 18/* spr_blconsm */;
}
if(con == 11 &amp;&amp; !instance_exists(782/* OBJ_WRITER */)) {
    // obj_sansb_body
    with(517) fac= 1;
    con= 12;
}
if(p_cut == 1) {
    caster_stop(cutsfx);
    caster_play(cutsfx, 0.8, 1.4);
    snd_stop(20);
    snd_play(20/* snd_arrow */);
    p_cut= 0;
}
if(p_power == 1) {
    dopower= 0;
    if(global.osflavor == 2 &amp;&amp; hit_try &gt;= 23) dopower= 1;
    if(dopower == 0) {
        caster_stop(beam_up_sfx);
        caster_play(beam_up_sfx, 0.8, 1.2);
    }
    p_power= 0;
}
if(p_beam == 1) {
    caster_stop(beamsfx);
    caster_play(beamsfx, 0.8, 1.2);
    if(global.osflavor == 1) caster_stop(beamsfx_a);
    caster_play(beamsfx_a, 0.6, 1.2);
    p_beam= 0;
}
if(timer_on == 1 &amp;&amp; global.turntimer &lt;= 0) {
    if(hit_try &gt;= 15 &amp;&amp; hit_try &lt; 23) instance_create(0, 0, 510/* obj_menubone_maker */);
    global.mnfight= 3;
    global.movement= 0;
    timer_on= 0;
    // obj_bonestab
    with(502) instance_destroy();
    // obj_sans_shaker
    with(512) instance_destroy();
    // obj_bonewall_normal
    with(500) instance_destroy();
    // obj_bonewall
    with(501) instance_destroy();
    // obj_boneplat
    with(515) instance_destroy();
    // obj_sans_bonebul
    with(499) instance_destroy();
    // obj_gasterblaster
    with(498) instance_destroy();
    // obj_boneloop_v
    with(503) instance_destroy();
    // obj_gasterbl_gen
    with(518) instance_destroy();
    // obj_3platgen
    with(514) instance_destroy();
}
if(drama == 1 &amp;&amp; instance_exists(782/* OBJ_WRITER */) &amp;&amp; OBJ_WRITER.stringno == 2) {
    d_music= caster_load("music/chokedup.ogg");
    caster_loop(d_music, 0.8, 0.9);
    drama= 2;
}
if(global.debug == 1 &amp;&amp; keyboard_check_pressed(81/* Q */) &amp;&amp; hit_try &lt; 12) {
    hit_try= 12;
    hit_reached= 11;
}
if(global.debug == 1 &amp;&amp; keyboard_check_pressed(69/* E */) &amp;&amp; hit_try &lt; 22) {
    hit_try= 22;
    hit_reached= 21;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
