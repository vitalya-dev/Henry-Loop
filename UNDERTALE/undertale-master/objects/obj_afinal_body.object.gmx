<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner= 0;
anim= 0;
armrot= 0;
side= 0;
up= 0;
ucon= 0;
u_timer= 0;
bcon= 0;
ar_shake= 0;
cry= 0;
psfx= caster_load("music/sfx/sfx_spellcast.ogg");
seg= caster_load("music/sfx/sfx_segapower.ogg");
ps= 0;
global.faceemotion= 0;
bodyfader= 0;
pause= 0;
global.hope= 0;
darker= 0;
darker_x= 0;
u_gen= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bcon++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ucon++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>caster_stop(psfx);
caster_play(psfx, 0.6 + ps / 8, 0.5 + ps / 6);
ps++;
if(ps &lt; 6) alarm[9]= 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>caster_free(psfx);
caster_free(seg);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>anim++;
siner++;
side+= 2;
if(side &gt; 800) side-= 800;
yoff= sin(siner / 4);
yoff2= sin(siner / 16);
draw_set_color(0);
draw_rectangle(-10, 240, 999, -10, 0);
thiscolor= make_color_hsv(siner * 6, 200, 200);
draw_set_color(thiscolor);
draw_sprite_part_ext(2361, 0, side, 0, 276, 216, 640, 0, -1, 1, thiscolor, 0.5);
draw_sprite_part_ext(2361, 0, side + 60, 0, 276, 216, 640, 0, -1, 1, thiscolor, 0.5);
draw_sprite_part_ext(2361, 0, side + 120, 0, 276, 216, 640, 0, -1, 1, thiscolor, 0.5);
draw_set_color(thiscolor);
draw_sprite_part_ext(2361, 0, side, 0, 276, 216, 0, 0, 1, 1, thiscolor, 0.5);
draw_sprite_part_ext(2361, 0, side + 60, 0, 276, 216, 0, 0, 1, 1, thiscolor, 0.5);
draw_sprite_part_ext(2361, 0, side + 120, 0, 276, 216, 0, 0, 1, 1, thiscolor, 0.5);
draw_sprite_ext(2340/* spr_afinal_cosmoswing */, floor(anim / 6), x + 42, y - 52 + yoff2 * 4, 2, 2, 0, image_blend, image_alpha);
draw_sprite_ext(2340/* spr_afinal_cosmoswing */, floor(anim / 6), x - 44, y - 52 + yoff2 * 4, -2, 2, 0, image_blend, image_alpha);
draw_sprite_ext(2335/* spr_afinal_orbwing */, floor(anim / 6), x - 110, y - 52, 2, 2, 0, image_blend, image_alpha);
draw_sprite_ext(2335/* spr_afinal_orbwing */, floor(anim / 6), x + 108, y - 52, -2, 2, 0, image_blend, image_alpha);
draw_sprite_ext(2339/* spr_afinal_stem */, floor(anim / 6), x - 2, y + 146, 2, 2, 0, image_blend, image_alpha);
draw_sprite_ext(2337/* spr_afinal_orb */, floor(anim / 6), x - 2, y + 68, 2, 2, 0, image_blend, image_alpha);
rx= random(ar_shake) - random(ar_shake);
ry= random(ar_shake) - random(ar_shake);
ry*= 1.5;
rx*= 0.7;
draw_set_alpha(bodyfader);
draw_set_color(0);
draw_rectangle(-10, -10, 999, 999, 0);
draw_set_alpha(1);
if(cry == 0)
    draw_sprite_ext(2341/* spr_afinal_face */, global.faceemotion, x, y, 2, 2, 0, image_blend, image_alpha);
if(cry == 1)
    draw_sprite_ext(2342/* spr_afinal_face_cry */, floor(siner / 8), x + rx / 3, y + ry / 3, 2, 2, 0, image_blend, image_alpha);
if(cry == 2)
    draw_sprite_ext(2343/* spr_afinal_face_cry2 */, floor(siner / 2), x + rx / 3, y + ry / 3, 2, 2, 0, image_blend, image_alpha);
draw_sprite_ext(2345/* spr_afinal_arm */, floor(anim / 6), x - 58 + rx, y + 56 + yoff * 2 + ry, 2, 2, armrot, image_blend, image_alpha - bodyfader);
draw_sprite_ext(2345/* spr_afinal_arm */, floor(anim / 6), x + 56 + rx, y + 56 + yoff * 2 + ry, -2, 2, -armrot, image_blend, image_alpha - bodyfader);
draw_sprite_ext(2346/* spr_afinal_shoulder */, floor(anim / 6), x - 84, y + 32, 2, 2, 0, image_blend, image_alpha - bodyfader);
draw_sprite_ext(2346/* spr_afinal_shoulder */, floor(anim / 6), x + 82, y + 32, -2, 2, 0, image_blend, image_alpha - bodyfader);
if(ucon &gt; 0) {
    if(ucon == 1) {
        caster_play(psfx, 0.7, 1.2);
        arf= 30;
        ucon= 2;
    }
    if(ucon == 2) {
        armrot+= arf;
        arf-= 2;
        if(arf &lt;= 0) {
            ucon= 3;
            alarm[10]= 5;
        }
    }
    if(ucon == 4) {
        gen= instance_create(x, y, 575/* obj_ultimagen */);
        gen.type= u_gen;
        if(!instance_exists(573/* obj_ultimatarget */))
            target= instance_create(obj_heart.x, obj_heart.y, 573/* obj_ultimatarget */);
        ucon= 5;
        alarm[10]= 140;
        if(gen.type == 2) alarm[10]= 130;
        arf= -30;
    }
    if(ucon == 6) {
        with(gen) instance_destroy();
        armrot+= arf;
        arf+= 2;
        if(arf &gt;= 0) {
            ucon= 0;
            global.mnfight= 3;
        }
    }
}
if(!instance_exists(576/* obj_ultimabullet */) &amp;&amp; !instance_exists(573/* obj_ultimatarget */)) {
    // obj_ultimatarget
    with(573) instance_destroy();
}
if(bcon &gt; 0) {
    if(bcon == 1) {
        ps= 0;
        alarm[9]= 7;
        r_break= 0;
        r_al= 1;
        radi= 0;
        r_siner= 0;
        arf= 30;
        bcon= 2;
    }
    if(bcon == 2) {
        armrot-= arf;
        arf-= 5;
        if(arf &lt;= 0) {
            bcon= 3;
            alarm[11]= 35;
        }
    }
    if(bcon == 4) {
        bcon= 4.1;
        alarm[11]= 2;
    }
    if(bcon == 4.1) armrot-= 5;
    if(bcon == 5.1) {
        bcon= 5;
        alarm[11]= 5;
    }
    if(bcon == 5) {
        ar_shake= 0;
        armrot+= 26;
    }
    if(bcon == 6) {
        cry= 2;
        ar_shake= 5;
        armx= lengthdir_x(150, -armrot - 90);
        army= lengthdir_y(150, -armrot - 90);
        beam= instance_create(320, y + 56 + army - 20, 577/* obj_lastbeam */);
        bcon= 7;
        alarm[11]= 400;
    }
    if(bcon &lt; 7 &amp;&amp; r_al &gt; 0) {
        ar_shake+= 0.2;
        if(radi &lt; 60) radi+= 1.5;
        r_siner++;
        radi_s= sin(r_siner / 2) * radi / 8;
        armx= lengthdir_x(150, -armrot - 90);
        army= lengthdir_y(150, -armrot - 90);
        if(r_break == 1) {
            radi-= 6;
            r_al-= 0.1;
            if(r_al &lt;= 0) r_al= 0;
        }
        draw_set_alpha(r_al);
        draw_set_color(16777215);
        draw_circle(x + 56 + armx, y + 56 + army, radi + radi_s, 1);
        draw_circle(x + 56 + armx, y + 56 + army, radi + radi_s - 1, 1);
        draw_sprite_ext(2393/* spr_beamcircle */, 0, x + 56 + armx, y + 56 + army, 2 * (radi + radi_s) / 40, 2 * (radi + radi_s) / 40, 0, 16777215, r_al);
        draw_circle(x - 58 - armx, y + 56 + army, radi + radi_s, 1);
        draw_circle(x - 58 - armx, y + 56 + army, radi + radi_s - 1, 1);
        draw_sprite_ext(2393/* spr_beamcircle */, 0, x - 58 - armx, y + 56 + army, 2 * (radi + radi_s) / 40, 2 * (radi + radi_s) / 40, 0, 16777215, r_al);
        draw_set_alpha(1);
    }
    if(bcon == 8) {
        cry= 0;
        global.faceemotion= 5;
        if(ar_shake &gt; 0) ar_shake--;
        if(armrot &gt; 0) armrot-= 2;
        else  armrot= 0;
        if(ar_shake &lt;= 0) {
            ar_shake= 0;
            bcon= 0;
            global.mnfight= 3;
        }
    }
}
if(global.debug == 1) {
}
if(darker == 1) {
    // obj_hpname
    with(183) depth++;
    if(darker_x &lt; 1) darker_x+= 0.04;
    draw_set_alpha(darker_x);
    draw_set_color(0);
    draw_rectangle(-10, -10, 999, 999, 0);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
