<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_undyneb2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner= 0;
face= 0;
noanim= 0;
sine= 0;
tr= 0;
off= 0;
spearalpha= 1;
pause= 0;
bidoof= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(pause == 1 &amp;&amp; noanim == 0) {
    siner= 0;
    x= parent.x;
}
if(noanim == 1) {
    siner++;
    draw_sprite_ext(282/* spr_undyneb_hair */, siner / 5, x - 60, y - 60 + goof / 3, 2, 2, 0, 16777215, 1);
    draw_sprite_ext(292/* spr_undyneb_noanim */, 0, x - 4, y + 10, 2, 2, 0, 16777215, 1);
    draw_sprite_ext(284/* spr_undyneb_face2 */, global.faceemotion, x, 6 + y - 50, 2, 2, 0, 16777215, 1);
}
if(noanim == 0) {
    if(sine == 0) siner++;
    goof= sin(siner / 5) * 10;
    doof= cos(siner / 4) * 10;
    draw_sprite_ext(282/* spr_undyneb_hair */, siner / 5, x - 60, y - 10 + goof / 2, 2, 2, 0, 16777215, 1);
    draw_sprite_ext(294/* spr_undyneb2_lowerbody */, 8, x + 32, y + 102 + 70, 2, 2 - goof / 60, 0, 16777215, 1);
    if(off == 0) {
        draw_sprite_ext(298/* spr_undyneb2_armr */, 0, x + 44, y + 60 + goof / 1.5, 2, 2, doof / 4 + 10, 16777215, 1);
        draw_sprite_ext(297/* spr_undyneb2_arml */, 0, x + 22, y + 60 + goof / 1.5, 2, 2, doof / 4, 16777215, 1);
    }
    if(off == 1) {
        draw_sprite_ext(298/* spr_undyneb2_armr */, 1, x + 44, y + 60 + goof / 1.5, 2, 2, doof / 4 + 20, 16777215, 1);
        draw_sprite_ext(297/* spr_undyneb2_arml */, 1, x + 22, y + 60 + goof / 1.5, 2, 2, doof / 4 - 10, 16777215, 1);
    }
    draw_sprite_ext(295/* spr_undyneb2_upperbody */, 8, x + 20, y + 62 + 48 + goof / 3, 2, 2 - goof / 50, 0, 16777215, 1);
    draw_sprite_ext(284/* spr_undyneb_face2 */, global.faceemotion, x + doof / 4, 6 + y + goof / 1.5, 2, 2, 0, 16777215, 1);
    if(off == 0)
        draw_sprite_ext(296/* spr_undyneb2_spear */, 0, x + 64, y + 100 + goof / 1.5, 2, 2, doof / 4 + 10, 16777215, 1);
    if(off == 1) {
        bidoof--;
        sine= 1;
        spearalpha-= 0.03;
        draw_sprite_ext(296/* spr_undyneb2_spear */, 1, x + 64, y + 100 + goof / 1.5 - bidoof * 2, 2, 2, doof / 4 + 10 + bidoof, 16777215, spearalpha);
        if(spearalpha &lt; -0.2) noanim= 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
