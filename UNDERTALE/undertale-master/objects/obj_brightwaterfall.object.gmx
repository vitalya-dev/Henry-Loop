<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_waterfall_bright_mt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>700000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner++;
if(image_xscale == 1) draw_sprite(961/* spr_waterfall_singletop */, siner / 5, x, y);
if(image_xscale &gt; 1) {
    draw_sprite(965/* spr_waterfall_bright_lt */, siner / 5, x, y);
    i= 1;
    while(i &lt; image_xscale + 1) {
        if(i &lt; image_xscale) {
            draw_sprite(963/* spr_waterfall_bright_mt */, siner / 5, x + i * 20, y);
            i++;
        } else  {
            draw_sprite(964/* spr_waterfall_bright_rt */, siner / 5, x + i * 20 - 20, y);
            break;
        }
    }
}
if(image_yscale &gt; 1 &amp;&amp; image_xscale == 1) {
    i= 1;
    while(i &lt;= image_yscale) {
        draw_sprite(968/* spr_waterfall_bright_mm */, siner / 5, x, y + i * 20);
        i++;
    }
}
if(image_yscale &gt; 1 &amp;&amp; image_xscale &gt; 1) {
    j= 1;
    while(j &lt;= image_yscale) {
        if(j &lt; image_yscale)
            draw_sprite(966/* spr_waterfall_bright_lm */, siner / 5, x, y + j * 20);
        if(j == image_yscale)
            draw_sprite(971/* spr_waterfall_bright_bl */, siner / 5, x, y + j * 20 - 20);
        i= 1;
        while(i &lt;= image_xscale) {
            if(j &lt; image_yscale) {
                if(i == image_xscale)
                    draw_sprite(967/* spr_waterfall_bright_rm */, siner / 5, x + i * 20 - 20, y + j * 20);
                else 
                    draw_sprite(968/* spr_waterfall_bright_mm */, siner / 5, x + i * 20, y + j * 20);
            }
            if(j == image_yscale) {
                if(i == image_xscale)
                    draw_sprite(970/* spr_waterfall_bright_br */, siner / 5, x + i * 20 - 20, y + j * 20 - 20);
                else 
                    draw_sprite(969/* spr_waterfall_bright_bm */, siner / 5, x + i * 20, y + j * 20 - 20);
            }
            i++;
        }
        j++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
