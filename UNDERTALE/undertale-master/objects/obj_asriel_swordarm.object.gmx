<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_asriel_swordlessarm</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_asbulletparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>con= 0;
timer= 0;
s_offset= 40;
o_o= 0;
smear= 0;
dontdraw= 0;
flip= 1;
alarm[0]= 1;
visible= 0;
if(instance_find(object_index, 0) == id) flip= 0;
relx= x - obj_asriel_swordmaster.x;
sm= 589;
skip= 0;
twinkle= 0;
shake= 0;
blazing= 0;
bl_o= 0;
king= 569;
depth= king.depth + 1;
start= 1;
image_alpha= 0;
image_xscale= 2;
image_yscale= 2;
alarm[1]= 2;
col= 0;
h_mode= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>visible= 1;
if(flip == 1) image_xscale= -2;
else  image_xscale= 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x= obj_asriel_swordmaster.x + relx;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(start == 1) {
    if(image_alpha &lt; 1) image_alpha+= 0.2;
    else  start= 0;
}
if(dontdraw == 0)
    draw_sprite_ext(sprite_index, image_index, x + random(shake) - random(shake), y + random(shake) - random(shake), image_xscale, 2, image_angle, image_blend, image_alpha);
timer++;
if(timer == 5) con= 1;
if(con == 1) {
    s_offset--;
    if(flip == 0) {
        if(o_o == 1)
            draw_sprite_ext(2386/* spr_asriel_sword */, image_index, x - s_offset - 22, y - 148, image_xscale, 2, image_angle, image_blend, image_alpha);
        if(o_o == 0)
            draw_sprite_ext(2386/* spr_asriel_sword */, image_index, x + s_offset - 22, y - 148, image_xscale, 2, image_angle, image_blend, image_alpha);
    }
    if(flip == 1) {
        if(o_o == 1)
            draw_sprite_ext(2386/* spr_asriel_sword */, image_index, x - s_offset + 22, y - 148, image_xscale, 2, image_angle, image_blend, image_alpha);
        if(o_o == 0)
            draw_sprite_ext(2386/* spr_asriel_sword */, image_index, x + s_offset + 22, y - 148, image_xscale, 2, image_angle, image_blend, image_alpha);
    }
    if(o_o == 0) o_o= 1;
    else  o_o= 0;
    if(s_offset &lt;= 1) {
        with(sm) event_user(8);
        sprite_index= 2388/* spr_asriel_swordarm */;
        con= 2;
        timer= 999;
        timer= 999;
        if(flip == 0) sm.alarm[5]= 14;
    }
}
if(twinkle == 0) {
    if(h_mode == 0) {
        if(timer == 107) {
            with(sm) event_user(5);
        }
        if(timer &gt; 105 &amp;&amp; timer &lt; 116) {
            y-= 0.5;
            if(flip == 0) {
                king.headrot+= 4;
                with(sm) event_user(2);
                image_angle++;
            }
            if(flip == 1) {
                king.headrot-= 4;
                with(sm) event_user(3);
                image_angle--;
            }
        }
    }
    if(h_mode == 1) {
        if(timer == 110) {
            with(sm) event_user(5);
        }
        if(timer &gt; 108 &amp;&amp; timer &lt; 116) {
            y-= 0.75;
            if(flip == 0) {
                king.headrot+= 6;
                with(sm) event_user(2);
                image_angle+= 1.5;
            }
            if(flip == 1) {
                king.headrot-= 6;
                with(sm) event_user(3);
                image_angle-= 1.5;
            }
        }
    }
    if(h_mode == 2) {
        if(timer == 113) {
            with(sm) event_user(5);
        }
        if(timer &gt; 111 &amp;&amp; timer &lt; 116) {
            y-= 1.5;
            if(flip == 0) {
                king.headrot+= 12;
                with(sm) event_user(2);
                image_angle+= 3;
            }
            if(flip == 1) {
                king.headrot-= 12;
                with(sm) event_user(3);
                image_angle-= 3;
            }
        }
    }
}
if(twinkle == 1) {
    if(timer &gt; 90 &amp;&amp; timer &lt; 105) {
        blazing= 1;
        y-= 0.5;
        if(flip == 0) {
            with(sm) event_user(9);
            image_angle+= 1.5;
        }
        if(flip == 1) {
            with(sm) event_user(9);
            image_angle-= 1.5;
        }
    }
    if(timer &gt; 90 &amp;&amp; timer &lt; 115) shake= 5;
    if(timer == 115) shake= 0;
    if(timer == 120) blazing= 0;
}
if(timer == 124) {
    with(sm) event_user(6);
    depth= king.depth - 10;
    dontdraw= 1;
    smear= 5;
}
if(timer &gt;= 124 &amp;&amp; timer &lt; 127) {
    if(flip == 0) king.headrot-= 12;
    if(flip == 1) king.headrot+= 12;
    dontdraw= 0;
    image_angle= 0;
    if(timer &gt;= 125) col= 1;
    sprite_index= 2380/* spr_asriel_swordextend */;
    y+= 3;
}
if(timer == 125 &amp;&amp; twinkle == 1) {
    global.border= 6;
    SCR_BORDERSETUP();
    timer= 200;
    vspeed= 5;
    friction= 0.5;
    sprite_index= 2382/* spr_asriel_swordextend_shatter */;
    i= 0;
    while(i &lt; 4) {
        instance_create(x, y + 120 + i * 35, 588/* obj_swordtwinkle */);
        i++;
    }
}
if(timer &gt;= 127 &amp;&amp; timer &lt; 130) {
    col= 0;
    y+= 5;
    if(flip == 0) image_angle+= 30;
    if(flip == 1) image_angle-= 30;
}
if(timer == 130) {
    king.headrot/= 2;
    depth= king.depth + 1;
    y= ystart;
    image_angle= 0;
    sprite_index= 2391/* spr_asriel_swordarm_half */;
}
if(timer == 131) {
    king.headrot/= 2;
    y= ystart;
    image_angle= 0;
    sprite_index= 2388/* spr_asriel_swordarm */;
}
if(timer &gt; 200 &amp;&amp; twinkle == 1) {
    if(timer &gt; 201) col= 0;
    image_alpha-= 0.1;
    if(image_alpha &lt;= 0) instance_destroy();
}
if(smear &gt; 0) {
    if(flip == 0)
        draw_sprite_ext(2383/* spr_asriel_swordsmear */, image_index, x - 40, y - 168, image_xscale, 2.5, 0, image_blend, smear / 5);
    if(flip == 1)
        draw_sprite_ext(2383/* spr_asriel_swordsmear */, image_index, x + 40, y - 168, image_xscale, 2.5, 0, image_blend, smear / 5);
    smear--;
}
if(blazing == 1) {
    if(bl_o == 0) bl_o= 1;
    else  bl_o= 0;
    if(bl_o == 1)
        draw_sprite_ext(2389/* spr_asriel_swordarm_power */, 0, x, y, image_xscale, 2, image_angle, image_blend, image_alpha);
}
if(col == 1) {
    if(flip == 0 &amp;&amp; collision_rectangle(x - 3, y, x + 80, y + 260, 743, 0, 1))
        event_user(7);
    if(flip == 1 &amp;&amp; collision_rectangle(x + 3, y, x - 80, y + 260, 743, 0, 1))
        event_user(7);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
