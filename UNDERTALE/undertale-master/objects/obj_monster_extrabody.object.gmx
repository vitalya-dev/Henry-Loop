<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active= 0;
alarm[0]= 1;
drawme= 0;
siner= 0;
siner2= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active= 1;
if(type == 1) {
    mypart1= instance_create(x, y - 4, 215/* obj_froghead */);
    mypart2= instance_create(x, y - 4, 214/* obj_froglegs */);
}
if(type == 8) {
    sprite_index= 198/* spr_lesserdoge */;
    mercymod= 0;
    depth= 10;
    tail= instance_create(x, y, 221/* obj_lesserdogetail */);
    tail.tailobj= id;
    head= instance_create(x, y, 222/* obj_lesserdogehead */);
    head.tailobj= id;
}
if(type == 9) {
}
if(type == 11) {
    part1= 254;
    part2= 255;
    mypart1= instance_create(x + 18, y, part1);
    mypart2= instance_create(x + 18, y, part2);
}
if(type == 12) {
    part1= 236;
    part2= 237;
    part3= 233;
    mypart1= instance_create(x, y - 6, part1);
    mypart2= instance_create(x, y - 6, part2);
    gift[0]= floor(random(7));
    gift[1]= floor(random(7));
    gift[2]= floor(random(7));
    if(gift[1] == gift[0]) gift[1]++;
    if(gift[2] == gift[0]) gift[2]++;
    if(gift[2] == gift[1]) gift[2]= 0;
    if(gift[2] == gift[0]) gift[2]++;
    mypart3= instance_create(x, y - 6, part3);
    mypart3.gift= gift[0];
    mypart4= instance_create(x, y - 6, part3);
    mypart4.gift= gift[1];
    mypart8= instance_create(x, y - 6, part3);
    mypart8.gift= gift[2];
    if(global.flag[138] == 1) {
        with(mypart3) visible= 0;
        with(mypart4) visible= 0;
        with(mypart8) visible= 0;
    }
}
if(type == 13) {
    part2= 251;
    part3= 250;
    part4= 249;
    part1= scr_marker(x - 6, y - 12, 219);
    part1.image_xscale= 2;
    part1.image_yscale= 2;
    part1.image_speed= 0.25;
    mypart2= instance_create(x - 6, y - 12, part2);
    mypart3= instance_create(x - 6, y - 12, part3);
    mypart4= instance_create(x - 6, y - 12, part4);
}
if(type == 14) {
    part1= 241;
    part2= 243;
    mypart1= instance_create(x, y, part1);
    mypart2= instance_create(x, y, part2);
    part1= 242;
    part2= 244;
    mypart1= instance_create(x, y, part1);
    mypart2= instance_create(x, y, part2);
}
if(type == 15) instance_create(x, y, 258/* obj_woshbody */);
if(type == 16) {
    ab= instance_create(x, y, 290/* obj_aaronbody */);
    if(global.flag[95] == 1) ab.sprite_index= 249/* spr_aaronbody_bull */;
}
if(type == 17) {
    emotion= 0;
    if(global.flag[81] == 2) emotion= 1;
    part1= 260;
    mypart1= instance_create(x, y, part1);
    part1.creator= id;
    agent= instance_create(x, y + 3, 261/* obj_agentbody */);
}
if(type == 18) instance_create(x, y, 294/* obj_tembody */);
if(type == 19) {
    msx= instance_create(x, y + 120, 295/* obj_moldsmalx_body */);
    global.idealborder[2]= 99999;
}
if(type == 20)
    dummy= instance_create(x + 60, y + 50, 288/* obj_maddum_drawer */);
if(type == 21) {
    bara1= instance_create(x, y + 22, 318/* obj_barabody */);
    bara1.headpic= 364;
    bara2= instance_create(x + 210, y + 22, 318/* obj_barabody */);
    bara2.headpic= 365;
    bd= 0;
}
if(type == 22)
    vulkin= instance_create(x, y - 10, 336/* obj_vulkinbody */);
if(type == 23) {
    graze= 0;
    plane= instance_create(x, y + 10, 329/* obj_tsunderplane_body */);
    plane.parent= id;
}
if(type == 24) {
    pyrope= instance_create(x, y + 70, 342/* obj_pyropebody */);
    pyrope.parent= id;
}
if(type == 25) {
    spider= instance_create(x + 55, y, 362/* obj_spiderb_body */);
    spider.parent= id;
}
if(type == 26) {
    stare1= 0;
    stare2= 0;
    madjick= instance_create(x + 30, y + 80, 368/* obj_wizardbody */);
    madjick.parent= id;
}
if(type == 27) {
    knight= instance_create(x + 50, y, 379/* obj_finalknight_body */);
    knight.parent= id;
}
if(type == 28) {
    frog= instance_create(x - 10, y, 386/* obj_finalfroggit_body */);
    frog.parent= id;
}
if(type == 29) {
    knight= instance_create(x, y, 396/* obj_whimsalot_body */);
    knight.parent= id;
}
if(type == 30) {
    eye= instance_create(x, y, 388/* obj_astigmatism_body */);
    eye.parent= id;
}
if(type == 31) aa= instance_create(x, y, 553/* obj_memoryhead_body */);
if(type == 32)
    aa= instance_create(x - 10, y - 10, 549/* obj_reaperbird_body */);
if(type == 33) {
    aa= instance_create(x - 20, y + 40, 556/* obj_endogeny_body */);
    aa.spared= 1;
}
if(type == 34) aa= instance_create(x, y - 10, 529/* obj_lemonbread_body */);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(active == 1) {
    if(type == 2) {
        siner++;
        y+= sin(siner / 6);
        draw_sprite(180/* spr_whimsun */, floor(siner / 6), x, y);
    }
    if(type == 3) {
        siner++;
        draw_sprite_ext(182/* spr_moldsmal */, floor(siner / 6), x, y + sin(siner / 4) * 10 + 20, 1, 1 - sin(siner / 4) * 0.05, 0, 16777215, 1);
    }
    if(type == 4) {
        siner++;
        draw_sprite_ext(185/* spr_napstabattle_leg */, floor(siner / 4), x - 2, y - 6, 2, 2, 0, 16777215, 1);
        if(y &lt; view_yview[0] + 240 &amp;&amp; global.flag[36] &gt; 0) {
            siner2++;
            draw_sprite_ext(183/* spr_blookhat */, 5, x + 34, y - 32, 2, 2, 0, 16777215, siner2 / 100);
        }
    }
    if(type == 5) {
        siner++;
        gosp= 186;
        if(y &lt; view_yview[0] + 240) gosp= 188;
        if(siner &lt; 15) draw_sprite(gosp, 0, x, y);
        if(siner &gt;= 15 &amp;&amp; siner &lt;= 18)
            draw_sprite(gosp, 1, x, y);
        if(siner &gt;= 19 &amp;&amp; siner &lt;= 21)
            draw_sprite(gosp, 0, x, y);
        if(siner &gt;= 22 &amp;&amp; siner &lt;= 25)
            draw_sprite(gosp, 1, x, y);
        if(siner &gt;= 25) siner= 0;
    }
    if(type == 6) {
        siner++;
        if(siner &gt; 30) {
            siner2++;
            if(siner2 &gt; 9) {
                siner2= 0;
                siner= 0;
            }
        }
        draw_sprite(189/* spr_loox */, floor(siner2 / 2), x, y - 10);
    }
    if(type == 7) {
        siner++;
        draw_sprite(191/* spr_vegetoid */, floor(siner / 6), x, y);
    }
    if(type == 8) {
        siner++;
        draw_sprite(198/* spr_lesserdoge */, floor(siner / 10), x, y);
        if(y &lt; view_yview[0] + 240 &amp;&amp; global.flag[55] == 2)
            mercymod+= 2;
    }
    if(type == 9) {
        siner++;
        draw_sprite_ext(224/* spr_greatdog_n */, floor(siner / 10), x, y, 2, 2, 0, 16777215, 1);
    }
    if(type == 10) {
        siner++;
        draw_sprite(202/* spr_icecap */, floor(siner / 10), x, y + 16);
    }
    if(type == 13 &amp;&amp; y &lt; view_yview[0] + 240) {
        part1.sprite_index= 220/* spr_movedogeheadb */;
        part1.image_speed= 0.1;
    }
    if(type == 17 &amp;&amp; y &lt; view_yview[0] + 240 &amp;&amp; emotion == 1)
        emotion= 2;
    if(type == 19 &amp;&amp; y &lt; view_yview[0] + 260 &amp;&amp; msx.stage == 0)
        msx.stage= 1;
    if(type == 20 &amp;&amp; y &lt; view_yview[0] + 240) {
        global.faceemotion= 3;
        dummy.rotmod+= 0.04;
        dummy.speedmod+= 0.03;
    }
    if(type == 21 &amp;&amp; y &lt; view_yview[0] + 240 &amp;&amp; bd == 0) {
        bd= 1;
        with(bara1) event_user(2);
    }
    if(type == 22 &amp;&amp; y &lt; view_yview[0] + 240)
        obj_vulkinbody.face= 390;
    if(type == 27 &amp;&amp; y &lt; view_yview[0] + 300) {
        siner2++;
        if(siner2 &gt; 25) knight.asleep= 1;
        if(siner2 &gt; 50) knight.asleep= 2;
    }
    if(type == 30) {
        if(y &lt; view_yview[0] + 260) {
            if(eye.anim &lt; 230) eye.anim= 235;
        } else  eye.anim= 20;
    }
    if(type == 31 &amp;&amp; y &lt; view_yview[0] + 200 &amp;&amp; aa.mega == 0) {
        aa.mega= 1;
        aa.alarm[0]= -1;
        aa.alarm[1]= -1;
        aa.alarm[2]= -1;
        aa.on= 1;
    }
    if(type == 32 &amp;&amp; y &lt; view_yview[0] + 200)
        aa.stretchup= 2;
    if(type == 33 &amp;&amp; y &lt; view_yview[0] + 200) {
        graze= 3;
        aa.fader= 1;
    }
    if(type == 34 &amp;&amp; y &lt; view_yview[0] + 200 &amp;&amp; aa.melting == 0)
        aa.melting= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
