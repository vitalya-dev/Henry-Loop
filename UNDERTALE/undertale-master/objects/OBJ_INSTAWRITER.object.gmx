<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>OBJ_WRITER</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SCR_TEXTTYPE(global.typer);
stringno= 0;
stringpos= 1;
lineno= 0;
halt= 0;
myx= writingx;
myy= writingy;
x= round(x);
y= round(y);
script_execute(1/* SCR_TEXT */, global.msc);
n= 0;
while(global.msg[n] != "%%%") {
    mystring[n]= global.msg[n];
    n++;
}
originalstring= mystring[0];
dfy= 0;
stringpos= string_length(originalstring);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myx= writingx;
myy= writingy;
n= 1;
while(n &lt; stringpos + 1) {
    if(string_char_at(originalstring, n) == "&amp;") {
        script_execute(148/* SCR_NEWLINE */);
        n++;
    }
    if(string_char_at(originalstring, n) == "^") n+= 2;
    if(string_char_at(originalstring, n) == "\" + chr(ord('"'))+" + ") {
        if(string_char_at(originalstring, n + 1) == "R")
            mycolor= 255;
        if(string_char_at(originalstring, n + 1) == "W")
            mycolor= 16777215;
        if(string_char_at(originalstring, n + 1) == "X")
            mycolor= 0;
        if(string_char_at(originalstring, n + 1) == "Y")
            mycolor= 65535;
        if(string_char_at(originalstring, n + 1) == "G")
            mycolor= 65280;
        if(string_char_at(originalstring, n + 1) == "B")
            mycolor= 16711680;
        if(string_char_at(originalstring, n + 1) == "p")
            mycolor= 13941759;
        if(string_char_at(originalstring, n + 1) == "P")
            script_execute(149/* SCR_TEXTSETUP */, 4, 255, x, y, x + 150, 43, 4, 94, 10);
        if(string_char_at(originalstring, n + 1) == "C") {
            if(global.inbattle == 0) {
                if(!instance_exists(783/* obj_choicer */))
                    choicer= instance_create(0, 0, 783/* obj_choicer */);
                choicer.creator= id;
            }
            if(global.inbattle == 1) halt= 5;
        }
        n+= 2;
    }
    if(string_char_at(originalstring, n) == "/") {
        halt= 1;
        if(string_char_at(originalstring, n + 1) == "%") halt= 2;
        break;
    } else  {
        if(string_char_at(originalstring, n) == "%") {
            if(string_char_at(originalstring, n + 1) == "%") {
                instance_destroy();
                break;
            } else  {
                stringpos= 1;
                stringno++;
                originalstring= mystring[stringno];
                myx= writingx;
                myy= writingy;
                lineno= 0;
                alarm[0]= textspeed;
                myletter= " ";
                break;
            }
        } else  {
            if(myx &gt; writingxend) script_execute(148/* SCR_NEWLINE */);
            myletter= string_char_at(originalstring, n);
            draw_set_font(myfont);
            draw_set_color(mycolor);
            if(shake &gt; 38) {
                if(shake == 39) {
                    direction+= 10;
                    draw_text(myx + hspeed, myy + vspeed, myletter);
                }
                if(shake == 40)
                    draw_text(myx + hspeed, myy + vspeed, myletter);
                if(shake == 41) {
                    direction+= 10 * n;
                    draw_text(myx + hspeed, myy + vspeed, myletter);
                    direction-= 10 * n;
                }
                if(shake == 42) {
                    direction+= 20 * n;
                    draw_text(myx + hspeed, myy + vspeed, myletter);
                    direction-= 20 * n;
                }
                if(shake == 43) {
                    direction+= 30 * n;
                    draw_text(myx + hspeed * 0.7 + 10, myy + vspeed * 0.7, myletter);
                    direction-= 30 * n;
                }
            } else 
                draw_text(myx + random(shake) - shake / 2, myy + random(shake) - shake / 2, myletter);
            myx+= spacing;
            n++;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
