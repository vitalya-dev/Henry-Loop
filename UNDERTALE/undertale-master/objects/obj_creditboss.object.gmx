<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type= 3;
active= 0;
alarm[0]= 1;
timer= 0;
truetype= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>truetype= type;
active= 1;
if(truetype == 0) {
    i= 0;
    while(i &lt; 5) {
        event_user(0);
        cb_a[i]= cb;
        cb_a[i].x= 760 + 40 * i;
        cb_a[i].y= y + 40 * i;
        cb_a[i].hspeed= -10;
        cb_a[i].action= 1;
        i++;
    }
}
if(truetype == 1) {
    i= 0;
    while(i &lt; 5) {
        event_user(0);
        cb_a[i]= cb;
        cb_a[i].x= -120 - 40 * i;
        cb_a[i].y= y + 40 * i;
        cb_a[i].hspeed= 10;
        cb_a[i].action= 1;
        i++;
    }
}
if(truetype == 2) {
    event_user(0);
    cb_a= cb;
    with(cb_a) width= string_width(text);
    cb_a.x= x - cb_a.width - 30;
    cb_a.y= -200;
    cb_a.vspeed= 12;
    cb_a.action= 2;
    cb_a.stretch= 1;
    event_user(0);
    cb_b= cb;
    with(cb_b) width= string_width(text);
    cb_b.x= x + cb_b.width + 30;
    cb_b.y= -200;
    cb_b.vspeed= 12;
    cb_b.action= 2;
    cb_b.stretch= 1;
    alarm[0]= 4;
}
if(truetype == 3) {
    if(y &gt; 240) myaa= 3;
    else  myaa= -3;
    angrand= random(360);
    i= 0;
    while(i &lt; 10) {
        event_user(0);
        cb_a[i]= cb;
        cb_a[i].aa= myaa;
        cb_a[i].stretch= 2;
        cb_a[i].stretchfactor= 55;
        cb_a[i].image_angle= i / 10 * 360 + angrand;
        cb_a[i].x= x;
        cb_a[i].y= y;
        with(cb_a[i]) {
            x+= lengthdir_x(55, image_angle);
            y+= lengthdir_y(60, image_angle);
        }
        i++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(active == 1) {
    timer++;
    if(truetype == 0 || truetype == 1) {
        if(timer == 50) {
            i= 0;
            while(i &lt; 5) {
                with(cb_a[i]) {
                    speed= 0;
                    direction= 0;
                }
                i++;
            }
        }
        if(timer &gt;= 50 &amp;&amp; timer &lt;= 70) {
            i= 0;
            while(i &lt; 5) {
                with(cb_a[i]) {
                    image_angle= direction;
                    curdir= direction;
                    idealdir= point_direction(x, y, obj_creditsheart.x + 8, obj_creditsheart.y + 8);
                    facingMinusTarget= curdir - idealdir;
                    angleDiff= facingMinusTarget;
                    if(abs(facingMinusTarget) &gt; 180) {
                        if(curdir &gt; idealdir)
                            angleDiff= -1 * (360 - curdir + idealdir);
                        else  angleDiff= 360 - idealdir + curdir;
                    }
                    leastAccurateAim= 3;
                    if(abs(angleDiff) &gt; leastAccurateAim) {
                        dirspeed= 1;
                        angleDiff2= abs(angleDiff);
                        if(angleDiff2 &gt; 10) dirspeed= 2;
                        if(angleDiff2 &gt; 20) dirspeed= 5;
                        if(angleDiff2 &gt; 30) dirspeed= 15;
                        if(angleDiff2 &gt; 40) dirspeed= 16;
                        if(angleDiff2 &gt; 50) dirspeed= 17;
                        if(angleDiff2 &gt; 60) dirspeed= 18;
                        if(angleDiff2 &gt; 70) dirspeed= 20;
                        if(angleDiff2 &gt; 80) dirspeed= 22;
                        if(angleDiff2 &gt; 90) dirspeed= 24;
                        if(angleDiff2 &gt; 100) dirspeed= 25;
                        if(angleDiff &lt; 0) dirspeed= -dirspeed;
                        direction-= dirspeed;
                    }
                }
                i++;
            }
        }
        if(timer == 75) {
            i= 0;
            while(i &lt; 5) {
                with(cb_a[i]) {
                    speed= 3;
                    friction= -0.5;
                    action= 0;
                }
                i++;
            }
        }
        if(timer == 85) instance_destroy();
    }
    if(truetype == 2) {
        if(timer &gt; 50 &amp;&amp; timer &lt; 70) x+= 4;
        if(timer &gt; 80 &amp;&amp; timer &lt; 100) x-= 4;
        if(timer &gt; 130 &amp;&amp; timer &lt; 150) x-= 4;
        if(timer &gt; 160 &amp;&amp; timer &lt; 180) x+= 4;
        if(timer &gt; 210 &amp;&amp; timer &lt; 230) x+= 4;
        if(timer &gt; 230 &amp;&amp; timer &lt; 250) x-= 4;
        if(timer == 250) {
            siner= 0;
            sf= 5;
        }
        if(timer &gt; 250 &amp;&amp; timer &lt; 420) {
            siner++;
            x+= sin(siner / 7) * sf;
            sf+= 0.02;
        }
        if(timer == 420) instance_destroy();
    }
    if(truetype == 3) {
        i= 0;
        while(i &lt; 10) {
            if(hspeed &gt; 0) {
                with(cb_a[i]) hspeed= 0.1;
            }
            if(hspeed &lt; 0) {
                with(cb_a[i]) hspeed= -0.1;
            }
            if(instance_exists(cb_a[i])) {
                cb_a[i].x= x;
                cb_a[i].y= y;
            }
            with(cb_a[i]) {
                if(abs(aa) &lt; 1.7) aa*= 1.02;
                x+= lengthdir_x(85, image_angle);
                y+= lengthdir_y(85, image_angle);
            }
            i++;
        }
        if(x &gt; 1000 || x &lt; -400) instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_creditsloader.credno &lt; obj_creditsloader.credamt - 1) {
    cb= instance_create(x, y, 1701/* obj_creditbullet */);
    cb.text= obj_creditsloader.creditname[obj_creditsloader.credno];
    obj_creditsloader.credno++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
