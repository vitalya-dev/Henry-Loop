<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_glydeshot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>blt_parent_noborder</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner= 0;
image_alpha= 0.5;
image_xscale= 0;
image_yscale= 0;
aa= choose(2, -2);
direction= 300 - random(60);
alarm[8]= 20;
breaking= 0;
talpha= 0;
tab= 0;
phrase= choose("COOL", "VIBIN", "RAD", "NICEY", "SPICEY", "SWEET", "SICK");
dmg= 9;
if(instance_exists(228/* obj_glydeb */))
    dmg= global.monsteratk[obj_glydeb.myself];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_towards_point(obj_heart.x + 8, obj_heart.y + 8, 9);
i= 0;
while(i &lt; 5) {
    gl= instance_create(x, y, 225/* obj_glydeshot */);
    if(instance_exists(gl))
        gl.direction= direction - 28 + i * 14;
    i++;
}
i= 0;
while(i &lt; 5) {
    gl= instance_create(x, y, 225/* obj_glydeshot */);
    if(instance_exists(gl)) {
        gl.direction= direction - 28 + i * 14;
        gl.speed-= 1.5;
    }
    i++;
}
i= 0;
while(i &lt; 5) {
    gl= instance_create(x, y, 225/* obj_glydeshot */);
    if(instance_exists(gl)) {
        gl.direction= direction - 28 + i * 14;
        gl.speed-= 3;
    }
    i++;
}
// obj_glydeshot
with(225) friction= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_heart">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_alpha &gt;= 0.95) scr_damagestandard(0, 0, 0, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner++;
if(speed &gt; 0) image_angle+= aa;
if(breaking == 0) {
    draw_sprite_ext(241/* spr_glydeshot */, 0, x, y, image_xscale, image_yscale, image_angle, image_blend, 0.7 + sin(siner / 3));
    draw_sprite_ext(241/* spr_glydeshot */, 1, x, y, image_xscale, image_yscale, image_angle + 45, image_blend, -sin(siner / 3) + 0.7);
}
if(image_xscale &lt; 10) {
    x+= sin(siner) * image_xscale / 2;
    y+= cos(siner) * image_xscale / 2;
    if(image_alpha &lt; 1) image_alpha+= 0.05;
    image_xscale+= 0.5;
    image_yscale+= 0.5;
}
if(y &gt; global.idealborder[3] - 20 &amp;&amp; breaking == 0) {
    breaking= 1;
    snd_play(142/* snd_shakerbreaker */);
}
if(breaking == 1)
    draw_sprite_ext(241/* spr_glydeshot */, 0, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
if(breaking == 1) {
    speed= 0;
    tab+= 0.1;
    if(talpha &lt; 1) talpha+= 0.2;
    image_alpha-= 0.05;
    image_xscale+= 0.5;
    image_yscale+= 0.5;
    true_tab= 0;
    if(talpha &gt;= 1) true_tab= tab - 0.5;
    draw_set_color(255);
    draw_set_font(1);
    draw_set_alpha(talpha - true_tab);
    draw_text_transformed(x - 20 - talpha * 40 + random(2) - random(2), y - 10 + random(2) - random(2) - 10 - talpha * 10, phrase, talpha * 2, talpha * 2, 1 + talpha);
    draw_set_alpha(1);
    if(image_alpha &lt; -1) instance_destroy();
}
if(global.turntimer &lt; 1) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
