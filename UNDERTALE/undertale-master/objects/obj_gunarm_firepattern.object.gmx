<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_asriel_gunarm_shot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1100</depth>
  <persistent>0</persistent>
  <parentName>obj_asbulletparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bb= 0;
thisy= y;
thisx= x;
image_speed= 0;
image_xscale= 2;
image_yscale= 2;
type= 0;
lock= 0;
home= 0;
txspeed= 0;
tyspeed= 0;
l_timer= 0;
flash= 0;
meter= 0;
metercounter= 0;
unhinge= 0;
blast= 0;
con= 0;
ctimer= 0;
image_alpha= 0;
alarm[6]= 30;
relx= x - obj_asriel_body.x;
rely= y - obj_asriel_body.y;
king= 569;
ks= 0;
image_angle= point_direction(x, y, obj_heart.x + 8, obj_heart.y + 8) + 90;
col_o= 0;
sfx_b= caster_load("music/sfx/sfx_a_bullet.ogg");
sfx_t= caster_load("music/sfx/sfx_a_target.ogg");
sfx_l= caster_load("music/sfx/sfx_rainbowbeam_1.ogg");
sfx_p= caster_load("music/sfx/sfx_segapower.ogg");
h_mode= 0;
jr= random(360);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>caster_free(sfx_b);
caster_free(sfx_t);
caster_free(sfx_l);
caster_free(sfx_p);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(fire &lt; maxfire) {
    event_user(0);
    alarm[5]= 2;
}
fire++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ks++;
king.y+= sin(ks / 8) * 0.5;
y+= tyspeed;
x+= txspeed;
if(abs(txspeed) &gt; 0) txspeed*= 0.5;
if(abs(txspeed) &lt;= 1) txspeed= 0;
if(abs(tyspeed) &gt; 0) tyspeed*= 0.5;
if(abs(tyspeed) &lt;= 1) tyspeed= 0;
if(x &lt; thisx) x+= (thisx - x) / 3;
if(y &lt; thisy) y+= (thisy - y) / 3;
if(x &gt; thisx) x+= (thisx - x) / 3;
if(y &gt; thisy) y+= (thisy - y) / 3;
if(abs(x - thisx) &lt; 2) x= thisx;
if(abs(x - thisy) &lt; 2) y= thisy;
if(bb == 99 &amp;&amp; vspeed &gt; 0 &amp;&amp; y &gt;= thisy) {
    y= thisy;
    x= thisx;
    bb= 0;
    gravity= 0;
    vspeed= 0;
    hspeed= 0;
}
if(unhinge == 0 &amp;&amp; image_index &gt; 0 &amp;&amp; vspeed &gt; -2)
    image_index--;
if(home == 1)
    image_angle= point_direction(x, y, obj_heart.x + 8, obj_heart.y + 8) + 90;
if(con == 0) {
    if(image_alpha &lt; 1) image_alpha+= 0.1;
    else  con= 1;
}
if(h_mode == 0 &amp;&amp; con == 1) {
    ctimer+= 0.5;
    if(ctimer &gt;= 27.5) ctimer+= 0.5;
    if(ctimer == 1) {
        l_timer= 20;
        home= 1;
        type= 1;
        fire= 0;
        maxfire= 6;
        alarm[5]= 20;
    }
    if(ctimer == 28) {
        l_timer= 10;
        home= 1;
        type= 2;
        fire= 0;
        maxfire= 6;
        alarm[5]= 10;
    }
    if(ctimer == 54) {
        l_timer= 8;
        home= 1;
        type= 1;
        fire= 0;
        maxfire= 5;
        alarm[5]= 8;
    }
    if(ctimer == 78) {
        l_timer= 8;
        home= 1;
        type= 2;
        fire= 0;
        maxfire= 5;
        alarm[5]= 8;
    }
    if(ctimer == 100) {
        l_timer= 8;
        home= 1;
        type= 1;
        fire= 0;
        maxfire= 4;
        alarm[5]= 8;
    }
    if(ctimer == 122) {
        l_timer= 8;
        home= 1;
        type= 2;
        fire= 0;
        maxfire= 4;
        alarm[5]= 8;
    }
    if(ctimer == 140) {
        l_timer= 6;
        home= 1;
        type= 1;
        fire= 0;
        maxfire= 4;
        alarm[5]= 6;
    }
    if(ctimer == 156) {
        l_timer= 6;
        home= 1;
        type= 2;
        fire= 0;
        maxfire= 4;
        alarm[5]= 6;
    }
    if(ctimer == 170) {
        l_timer= 6;
        home= 1;
        type= 1;
        fire= 0;
        maxfire= 8;
        alarm[5]= 6;
    }
    if(ctimer == 190) {
        caster_play(sfx_p, 1, 0.55);
        meter= 1;
    }
    if(ctimer == 205) {
        home= 0;
        aaspeed= 45;
    }
    if(ctimer &gt;= 205 &amp;&amp; ctimer &lt; 255) {
        image_angle+= aaspeed;
        if(aaspeed &gt; 0) aaspeed-= 3;
        else  {
            aaspeed= 0;
            ctimer= 255;
        }
    }
    if(ctimer == 255) home= 1;
    if(ctimer == 257) {
        sprite_index= 2372/* spr_asriel_gunarm_unhinge */;
        image_speed= 1;
        unhinge= 1;
        home= 0;
    }
    if(ctimer == 275) {
        metercounter= 7;
        caster_play(sfx_l, 1, 1.1);
        blast= 1;
        bt= 70;
        btimer= 0;
    }
    if(ctimer &gt;= 315) {
        with(king) {
            if(guncon == 5) guncon= 7;
        }
        image_alpha-= 0.1;
        if(image_alpha &lt; 0.1) instance_destroy();
    }
}
if(h_mode == 1 &amp;&amp; con == 1) {
    ctimer+= 0.5;
    if(ctimer &gt;= 19.5) ctimer+= 0.5;
    if(ctimer == 1) {
        l_timer= 20;
        home= 1;
        type= 1;
        fire= 0;
        maxfire= 6;
        alarm[5]= 20;
    }
    if(ctimer == 25) {
        l_timer= 10;
        home= 1;
        type= choose(1, 2);
        fire= 0;
        maxfire= 6;
        alarm[5]= 10;
    }
    if(ctimer == 50) {
        l_timer= 8;
        home= 1;
        type= choose(1, 2);
        fire= 0;
        maxfire= 5;
        alarm[5]= 8;
    }
    if(ctimer == 75) {
        l_timer= 7;
        home= 1;
        type= 2;
        fire= 0;
        maxfire= 4;
        alarm[5]= 7;
    }
    if(ctimer == 95) {
        l_timer= 7;
        home= 1;
        type= 1;
        fire= 0;
        maxfire= 4;
        alarm[5]= 7;
    }
    if(ctimer == 115) {
        l_timer= 7;
        home= 1;
        type= choose(1, 2);
        fire= 0;
        maxfire= 4;
        alarm[5]= 7;
    }
    if(ctimer == 132) {
        l_timer= 6;
        home= 1;
        type= 2;
        fire= 0;
        maxfire= 4;
        alarm[5]= 6;
    }
    if(ctimer == 156) {
        l_timer= 6;
        home= 1;
        type= 2;
        fire= 0;
        maxfire= 4;
        alarm[5]= 6;
    }
    if(ctimer == 170) {
        l_timer= 6;
        home= 1;
        type= 1;
        fire= 0;
        maxfire= 10;
        alarm[5]= 6;
    }
    if(ctimer == 200) {
        caster_play(sfx_p, 1, 0.55);
        meter= 1;
    }
    if(ctimer == 215) {
        home= 0;
        aaspeed= 90;
    }
    if(ctimer &gt;= 215 &amp;&amp; ctimer &lt; 240) {
        image_angle+= aaspeed;
        if(aaspeed &gt; 0) aaspeed-= 6;
        else  {
            aaspeed= 0;
            ctimer= 255;
        }
    }
    if(ctimer == 255) home= 1;
    if(ctimer == 257) {
        sprite_index= 2372/* spr_asriel_gunarm_unhinge */;
        image_speed= 1;
        unhinge= 1;
        home= 0;
    }
    if(ctimer == 270) {
        metercounter= 7;
        caster_play(sfx_l, 1, 1.1);
        blast= 1;
        bt= 70;
        btimer= 0;
    }
    if(ctimer == 272 || ctimer == 274 || ctimer == 276 || ctimer == 278 || ctimer == 280 || ctimer == 282 || ctimer == 284) {
        jr+= 8;
        i= 0;
        while(i &lt; 24) {
            star= instance_create(x, y, 579/* obj_regstar_blt */);
            star.h_mode= 0;
            star.friction= -0.1;
            star.speed= 8;
            star.direction= jr + 15 * i;
            star.depth= -9000;
            i++;
        }
    }
    if(ctimer &gt;= 310) {
        with(king) {
            if(guncon == 5) guncon= 7;
        }
        image_alpha-= 0.1;
        if(image_alpha &lt; 0.1) instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xx= lengthdir_x(95, image_angle - 90);
yy= lengthdir_y(95, image_angle - 90);
if(type == 0) {
    bolt= instance_create(x + xx, y + yy, 582/* obj_gunarm_bolt */);
    bolt.direction= image_angle - 90;
    bolt.thisd= image_angle - 90;
    bolt.image_angle= bolt.direction;
    bolt.speed= 20;
    bolt.image_xscale= 2;
    bolt.image_yscale= 2;
}
if(type == 1) {
    i= 0;
    repeat(3)  {
        bolt= instance_create(x + xx, y + yy, 582/* obj_gunarm_bolt */);
        bolt.direction= image_angle - 90;
        bolt.image_angle= bolt.direction;
        bolt.thisd= image_angle - 110 + 20 * i;
        bolt.image_angle= bolt.direction;
        bolt.speed= 20;
        bolt.image_xscale= 2;
        bolt.image_yscale= 2;
        i++;
    }
}
if(type == 2) {
    i= 0;
    repeat(4)  {
        bolt= instance_create(x + xx, y + yy, 582/* obj_gunarm_bolt */);
        bolt.direction= image_angle - 90;
        bolt.image_angle= bolt.direction;
        bolt.thisd= image_angle - 120 + 20 * i;
        bolt.image_angle= bolt.direction;
        bolt.speed= 20;
        bolt.image_xscale= 2;
        bolt.image_yscale= 2;
        i++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(lock == 0) {
    gravity_direction= image_angle - 90;
    direction= image_angle + 90;
    txspeed= lengthdir_x(7, image_angle + 90);
    tyspeed= lengthdir_y(7, image_angle + 90);
    caster_stop(sfx_b);
    caster_play(sfx_b, 0.8, 1);
    bb= 1;
}
image_index= 2;
event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>flash++;
if(flash &gt; 2) flash= 0;
xx= lengthdir_x(120, image_angle - 90);
yy= lengthdir_y(120, image_angle - 90);
l_timer--;
if(l_timer &gt; 0) {
    if(caster_is_playing(sfx_t) == 0) caster_loop(sfx_t, 1, 1);
    draw_set_color(255);
    if(flash == 1) draw_set_color(4235519);
    if(flash == 2) draw_set_color(65535);
    if(type == 0) {
        xxx= lengthdir_x(600, image_angle - 90);
        yyy= lengthdir_y(600, image_angle - 90);
        draw_line(x + xx, y + yy, x + xxx, y + yyy);
    }
    if(type == 1) {
        xxx= lengthdir_x(600, image_angle - 104);
        yyy= lengthdir_y(600, image_angle - 104);
        draw_line(x + xx, y + yy, x + xxx, y + yyy);
        xxx= lengthdir_x(600, image_angle - 90);
        yyy= lengthdir_y(600, image_angle - 90);
        draw_line(x + xx, y + yy, x + xxx, y + yyy);
        xxx= lengthdir_x(600, image_angle - 77);
        yyy= lengthdir_y(600, image_angle - 77);
        draw_line(x + xx, y + yy, x + xxx, y + yyy);
    }
    if(type == 2) {
        xxx= lengthdir_x(600, image_angle - 110);
        yyy= lengthdir_y(600, image_angle - 110);
        draw_line(x + xx, y + yy, x + xxx, y + yyy);
        xxx= lengthdir_x(600, image_angle - 96);
        yyy= lengthdir_y(600, image_angle - 96);
        draw_line(x + xx, y + yy, x + xxx, y + yyy);
        xxx= lengthdir_x(600, image_angle - 84);
        yyy= lengthdir_y(600, image_angle - 84);
        draw_line(x + xx, y + yy, x + xxx, y + yyy);
        xxx= lengthdir_x(600, image_angle - 70);
        yyy= lengthdir_y(600, image_angle - 70);
        draw_line(x + xx, y + yy, x + xxx, y + yyy);
    }
} else  {
    if(caster_is_playing(sfx_t)) caster_stop(sfx_t);
}
if(meter == 1) {
    metercounter++;
    i= 0;
    while(i &lt; 7) {
        if(metercounter &gt; i) {
            mcolor= make_color_hsv(metercounter * 12 - i * 24, 180, 255);
            draw_sprite_ext(2374/* spr_asriel_gunarm_meter */, i, x, y, image_xscale, image_yscale, image_angle, mcolor, 1);
        }
        i++;
    }
}
if(blast == 1) {
    if(bt &gt; 4) {
        view_xview[0]= choose(1, -1) * random(3);
        view_yview[0]= choose(1, -1) * random(3);
    } else  {
        view_xview[0]= 0;
        view_yview[0]= 0;
    }
    if(image_index == 5) image_index= 4;
    else  image_index= 5;
    metercounter-= 1.25;
    x= thisx + random(6) - random(6);
    y= thisy - random(15) - 16;
    king.x= x - relx + random(3) - random(3);
    king.y= y - rely + random(8) + 12;
    xx= lengthdir_x(115, image_angle - 90);
    yy= lengthdir_y(115, image_angle - 90);
    xxx= lengthdir_x(600, image_angle - 90);
    yyy= lengthdir_y(600, image_angle - 90);
    mcolor1= make_color_hsv(btimer * 18, 180, 255);
    mcolor2= make_color_hsv(btimer * 18 + 60, 180, 255);
    draw_line_width_color(x + xx, y + yy, x + xxx, y + yyy, bt, mcolor1, mcolor2);
    xxa= lengthdir_x(90, image_angle - 90);
    yya= lengthdir_y(90, image_angle - 90);
    xxb= lengthdir_x(100, image_angle - 90);
    yyb= lengthdir_y(100, image_angle - 90);
    draw_line_width_color(x + xx, y + yy, x + xxa, y + yya, bt / 2, mcolor1, mcolor2);
    draw_line_width_color(x + xx, y + yy, x + xxb, y + yyb, bt / 1.5, mcolor1, mcolor2);
    nx_factor= lengthdir_x(1, image_angle);
    ny_factor= lengthdir_y(1, image_angle);
    if(col_o == 1) {
        cl= 0;
        while(cl &lt; 4) {
            if(collision_line(x + xx - nx_factor * bt / 2 * cl / 4, y + yy - ny_factor * bt / 2 * cl / 4, x + xxx - nx_factor * bt / 2 * cl / 4, y + yyy - ny_factor * bt / 2 * cl / 4, 743, 0, 1))
                event_user(7);
            cl++;
        }
        cl= 0;
        while(cl &lt; 4) {
            if(collision_line(x + xx + nx_factor * bt / 2 * cl / 4, y + yy + ny_factor * bt / 2 * cl / 4, x + xxx + nx_factor * bt / 2 * cl / 4, y + yyy + ny_factor * bt / 2 * cl / 4, 743, 0, 1))
                event_user(7);
            cl++;
        }
    }
    if(col_o == 0) col_o= 1;
    else  col_o= 0;
    btimer++;
    if(btimer &gt; 15) {
        bt-= 3;
        if(bt &lt; 3) {
            bt= 0;
            blast= 0;
            unhinge= 0;
            meter= 0;
        }
    }
}
if(unhinge == 1 &amp;&amp; image_index &gt;= 5) {
    image_index= 5;
    image_speed= 0;
}
draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
