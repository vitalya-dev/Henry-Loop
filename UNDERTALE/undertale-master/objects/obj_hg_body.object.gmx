<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hypergoner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>obj_asbulletparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>facescale= 0;
facey= 0;
con= -1;
image_alpha= 0;
aa= 1;
bb= 12;
cc= 1;
dd= 8;
a= 1;
b= 12;
c= 1;
d= 8;
c_counter= 0;
gl= caster_load("music/sfx/sfx_hypergoner_laugh.ogg");
gc= caster_load("music/sfx/sfx_hypergoner_charge.ogg");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0, 0, 593/* obj_hg_debris */);
alarm[6]= 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>con++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(con == -1) {
    image_alpha+= 0.05;
    if(image_alpha &gt;= 1) {
        con= 0.1;
        alarm[4]= 20;
    }
}
if(con &lt; 3) {
    draw_sprite_ext(2401/* spr_hg_leftovers */, 0, x, y + facey / 6, 2, 2, 0, 16777215, image_alpha);
    draw_sprite_ext(2399/* spr_hg_horns */, 0, x, y - facey / 2, 2, 2, 0, 16777215, image_alpha);
    draw_sprite_ext(2402/* spr_hg_mainface */, 0, x + 88, y + 72 + facey, 2, 2 + facescale, 0, 16777215, image_alpha);
    draw_sprite_ext(2400/* spr_hg_jaws */, 0, x + 104, y + 248 - facey / 2, 2, 2, 0, 16777215, image_alpha);
}
if(con == 1.1) {
    caster_play(gl, 0.8, 1);
    con= 1;
}
if(con == 1) {
    facey-= 3.5;
    facescale-= 0.2;
    siner= 0;
    if(facescale &lt; -1) {
        con= 1.9;
        alarm[4]= 75;
        alarm[6]= 100;
    }
}
if(con == 1.9) {
    siner++;
    facey+= sin(siner / 1.5) * 8;
    facescale+= sin(siner / 1.5) * 0.2;
}
if(con == 2.9) {
    caster_play(gc, 1, 1);
    con= 3;
}
if(con == 3) {
    if(cc &lt; 80) cc+= 0.5;
    sprite_index= 2403/* spr_hg_laughing */;
    if(image_alpha &gt; 0.14) image_alpha-= 0.02;
    scr_fx_waver_scanline(bb, cc, dd);
    draw_set_color(16777215);
    draw_set_alpha(1 - image_alpha);
    i= 0;
    while(i &lt; 5) {
        draw_line_width_color(room_width / 2 + random(10) - random(10), room_height / 2 + random(10) - random(10), random(room_width), room_height, 2, 16777215, 8421504);
        i++;
    }
    i= 0;
    while(i &lt; 5) {
        draw_line_width_color(room_width / 2 + random(10) - random(10), room_height / 2 + random(10) - random(10), random(room_width), 0, 2, 16777215, 8421504);
        i++;
    }
    i= 0;
    while(i &lt; 5) {
        draw_line_width_color(room_width / 2 + random(10) - random(10), room_height / 2 + random(10) - random(10), 0, random(room_height), 2, 16777215, 8421504);
        i++;
    }
    i= 0;
    while(i &lt; 5) {
        draw_line_width_color(room_width / 2 + random(10) - random(10), room_height / 2 + random(10) - random(10), room_width, random(room_height), 2, 16777215, 8421504);
        i++;
    }
    draw_set_alpha(1);
    draw_set_circle_precision(16);
    rad= (c_counter - 180) / 1.5;
    if(rad &lt; 20) rad= 20;
    draw_set_color(32768);
    draw_circle(320, 240, rad, 1);
    if(c_counter &lt; 295 &amp;&amp; collision_circle(320, 240, rad - 5, 743, 0, 1))
        event_user(7);
    if(c_counter &lt; 180) {
        // obj_heart
        with(743) {
            pd= point_direction(x, y, 312, 232);
            ldrx= lengthdir_x(1, pd);
            ldry= lengthdir_y(1, pd);
            x+= ldrx;
            y+= ldry;
        }
    }
    if(c_counter &gt; 180) {
        // obj_heart
        with(743) {
            pd= point_direction(x, y, 312, 232);
            ldrx= lengthdir_x(2, pd);
            ldry= lengthdir_y(2, pd);
            x+= ldrx;
            y+= ldry;
        }
    }
    c_counter++;
    if(c_counter &gt; 180) {
        draw_set_color(16777215);
        draw_set_alpha((c_counter - 180) / 60);
        draw_circle(room_width / 2, room_height / 2, (c_counter - 180) / 1.5, 0);
        draw_set_alpha((c_counter - 210) / 80);
        draw_rectangle(-10, -10, 999, 999, 0);
        draw_set_alpha(1);
        if(c_counter &gt; 275)
            obj_heart.image_alpha-= 0.05;
        if(c_counter &gt; 320) {
            caster_free(gl);
            caster_free(gc);
            if(instance_exists(569/* obj_asriel_body */)) {
                obj_asriel_body.gonercon= 10;
                instance_destroy();
            }
        }
    }
}
if(obj_heart.x &lt; 0) obj_heart.x= 0;
if(obj_heart.x &gt; room_width - 16) obj_heart.x= room_width - 16;
if(obj_heart.y &lt; 0) obj_heart.y= 0;
if(obj_heart.y &gt; room_height - 16)
    obj_heart.y= room_height - 16;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
