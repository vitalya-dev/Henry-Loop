<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_bulletgenparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>con= 0;
alarm[4]= 10;
mcornerx= global.idealborder[0];
mcornery= global.idealborder[2];
mcornerx2= global.idealborder[1];
mcornery2= global.idealborder[2];
eye= 0;
eyestretch= 0;
type= 1;
miss= -1;
times= 0;
maxtimes= 2;
dmg= 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>con++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(miss == -1) miss= floor(random(11));
else  {
    missadd= 1 + floor(random(6));
    miss+= choose(1, -1) * missadd;
    if(miss &lt; 0) miss= 0 + missadd;
    if(miss &gt; 10) miss= 10 - missadd;
}
toothno= 0;
tx= global.idealborder[0] - 25;
repeat(5)  {
    if(toothno != miss) {
        downtooth= instance_create(tx, 0, 546/* obj_amalgam_tooth */);
        downtooth.top= 0;
    }
    toothno++;
    tx+= 25;
    if(toothno != miss) {
        uptooth= instance_create(tx, 0, 546/* obj_amalgam_tooth */);
        uptooth.top= 1;
    }
    toothno++;
    tx+= 25;
}
if(toothno != miss) {
    downtooth= instance_create(tx, 0, 546/* obj_amalgam_tooth */);
    downtooth.top= 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(16777215);
if(con == 1) {
    obj_uborder.instant= 1;
    eye= 1;
    con= 2;
    alarm[4]= 20;
    event_user(1);
    con= 4;
    alarm[4]= 20;
}
if(con == 4) {
    mcornerx-= 2;
    mcornery-= 3;
    mcornerx2+= 2;
    mcornery2-= 3;
}
if(con == 5) {
    con= 5.1;
    alarm[4]= 8;
}
if(con == 6.1) {
    con= 6;
    alarm[4]= 8;
}
if(con == 6) {
    mcornery--;
    mcornery2--;
    global.idealborder[2]-= 2;
}
if(con == 7) {
    con= 8;
    alarm[4]= 8;
}
if(con == 9) {
    if(global.idealborder[2] &lt; 330) {
        mcornery+= 8;
        mcornery2+= 8;
        global.idealborder[2]+= 20;
        if(obj_heart.y &lt; global.idealborder[2] + 4)
            obj_heart.y= global.idealborder[2] + 4;
    } else  {
        global.idealborder[2]= 340;
        con= 10;
        alarm[4]= 10;
        yy= global.idealborder[2];
        yy2= global.idealborder[3];
        xx= mcornerx;
        xx2= mcornerx2;
    }
}
if(con == 10) {
    mcornerx= xx + random(2) - 2;
    mcornerx2= xx2 + random(2) - 2;
    global.idealborder[2]= yy + random(2) - 2;
    if(obj_heart.y &lt; global.idealborder[2] + 4)
        obj_heart.y= global.idealborder[2] + 4;
}
if(con == 11) {
    if(times &gt;= maxtimes) con= 50;
    if(times &lt; maxtimes) {
        con= 12;
        obj_amalgam_tooth.con= 10;
        obj_amalgam_tooth.alarm[2]= 1;
    }
}
if(con == 12) {
    if(global.idealborder[2] &gt; 260) {
        mcornery-= 8;
        mcornery2-= 8;
        global.idealborder[2]-= 20;
        if(obj_heart.y &lt; global.idealborder[2] + 4)
            obj_heart.y= global.idealborder[2] + 4;
    } else  {
        event_user(1);
        times++;
        global.idealborder[2]= 250;
        con= 5.1;
        alarm[4]= 20;
        if(miss == 10 || miss == 0) alarm[4]= 26;
        yy= global.idealborder[2];
        yy2= global.idealborder[3];
        xx= mcornerx;
        xx2= mcornerx2;
    }
}
if(con == 50) {
    eye= 0;
    obj_amalgam_tooth.con= 10;
    obj_amalgam_tooth.alarm[2]= 1;
    con= 51;
    alarm[4]= 15;
}
global.border= 9999;
if(con == 51) {
    if(global.idealborder[2] &gt; 260)
        global.idealborder[2]-= 10;
    else  {
        global.idealborder[2]= 250;
        obj_uborder.instant= 0;
    }
    if(mcornerx &lt; global.idealborder[0] - 5)
        mcornerx+= 4;
    else  mcornerx= global.idealborder[0];
    if(mcornery &lt; global.idealborder[2] - 5)
        mcornery+= 4;
    else  mcornery= global.idealborder[2];
    if(mcornerx2 &gt; global.idealborder[1] + 5)
        mcornerx2-= 4;
    else  mcornerx2= global.idealborder[1];
    if(mcornery2 &lt; global.idealborder[2] - 5)
        mcornery2+= 4;
    else  mcornery2= global.idealborder[2];
}
if(eye == 1) {
    if(eyestretch &lt; 1) eyestretch+= 0.05;
    else  eyestretch= 1;
}
if(eye == 0) {
    if(eyestretch &gt; 0) eyestretch-= 0.1;
    else  eyestretch= 0;
}
draw_sprite_ext(706/* spr_amalgam_eye */, 0, global.idealborder[0] + 120, global.idealborder[2] - 80, 1, eyestretch, 0, 16777215, 1);
draw_line_width(mcornerx, mcornery, global.idealborder[0], global.idealborder[2], 3);
draw_line_width(mcornerx, mcornery, global.idealborder[0], global.idealborder[3], 3);
draw_line_width(mcornerx2, mcornery2, global.idealborder[1], global.idealborder[2], 3);
draw_line_width(mcornerx2, mcornery2, global.idealborder[1], global.idealborder[3], 3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
