<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mettlegbullet_r</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_metttestbulletparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myspeed= 8;
myside= 0;
visible= 1;
alarm[0]= 1;
con= 0;
eo= 0;
attacklength= 85;
active= 0;
shake= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>con++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active= 1;
con= 1;
alarm[4]= 24;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(con == 1) {
    if(myspeed &gt; 0) {
        if(eo == 0) draw_set_color(255);
        if(eo == 1) {
            draw_set_color(65535);
            snd_play(118/* snd_block2 */);
        }
        if(eo == 2) draw_set_color(0);
        draw_rectangle(global.idealborder[1] - 6, global.idealborder[2] + 6, global.idealborder[1] - attacklength + 6, global.idealborder[3] - 4, 1);
        draw_rectangle(global.idealborder[1] - 7, global.idealborder[2] + 7, global.idealborder[1] - attacklength + 5, global.idealborder[3] - 3, 1);
        draw_sprite(522/* spr_exclamationpoint */, eo, global.idealborder[1] - attacklength / 2, global.idealborder[2] + 30);
    }
    eo++;
    if(eo &gt; 2) eo= 0;
}
if(con == 2) {
    snd_play(14/* snd_spearrise */);
    if(myspeed &gt; 0) {
        x= global.idealborder[0] - sprite_width;
        nowx= x;
        myx= 0;
    }
    con= 3;
}
if(con == 3) {
    myx+= myspeed;
    if(myx &gt;= attacklength - myspeed) {
        myx= attacklength;
        con= 4;
        alarm[4]= 6;
        shake= 5;
    }
}
if(shake &gt; 0) shake--;
if(con == 5) {
    shake= 0;
    myx-= myspeed;
    if(myx &lt;= 0) instance_destroy();
}
if(con &gt;= 3) {
    i= 0;
    while(i &lt; 5) {
        rr= random(shake) - random(shake);
        draw_sprite_part(sprite_index, image_index, 0, 0, myx + rr, sprite_height, global.idealborder[1] - myx, global.idealborder[2] + 5 + i * 30 + rr);
        if(collision_rectangle(global.idealborder[1], global.idealborder[2] + 9 + i * 30, global.idealborder[1] - myx + 30, global.idealborder[2] + 18 + i * 30, 743, 0, 1))
            event_user(11);
        if(collision_line(global.idealborder[1] - myx + 30, global.idealborder[2] + 9 + i * 30, global.idealborder[1] - myx + 8, global.idealborder[2] + 9 + i * 30, 743, 0, 1) || collision_line(global.idealborder[1] - myx + 30, global.idealborder[2] + 23 + i * 30, global.idealborder[1] - myx + 8, global.idealborder[2] + 9 + i * 30, 743, 0, 1))
            event_user(11);
        i++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
