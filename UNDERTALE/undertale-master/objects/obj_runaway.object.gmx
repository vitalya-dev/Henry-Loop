<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_waterboard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stop= 0;
edge= 0;
vedge= 0;
hedge= 0;
movement= 1;
xmovement= 1;
active= 1;
mykid= instance_create(x, y, 1114/* obj_waterboard */);
l= 42;
r= 234;
u= 116;
d= 274;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movement= 1;
xmovement= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(1570/* obj_mainchara */)) {
    if(movement == 1 &amp;&amp; (obj_mainchara.x != obj_mainchara.xprevious || obj_mainchara.y != obj_mainchara.yprevious)) {
        shouldir= -1;
        jim= distance_to_object(1570);
        if(jim &lt; 80) {
            movement= 0;
            alarm[0]= 15;
            if(abs(x - obj_mainchara.x) &gt;= abs(y - obj_mainchara.y)) {
                vspeed= 0;
                if(x &gt; obj_mainchara.x) {
                    hspeed= 4;
                    x+= 4;
                    shoulddir= 0;
                } else  {
                    hspeed= -4;
                    x-= 4;
                    shoulddir= 2;
                }
                hedge= 0;
            } else  {
                hspeed= 0;
                if(y &gt; obj_mainchara.y) {
                    vspeed= 4;
                    y+= 4;
                    shoulddir= 3;
                } else  {
                    vspeed= -4;
                    y-= 4;
                    shoulddir= 1;
                }
                vedge= 0;
            }
        }
    }
    if(y &lt; u &amp;&amp; vspeed &lt; 0) {
        vspeed= 0;
        vedge= 1;
        y= u;
    }
    if(y &gt; d &amp;&amp; vspeed &gt; 0) {
        vspeed= 0;
        vedge= 2;
        y= d;
    }
    if(x &gt; r &amp;&amp; hspeed &gt; 0) {
        hspeed= 0;
        hedge= 2;
        x= r;
    }
    if(x &lt; l &amp;&amp; hspeed &lt; 0) {
        hspeed= 0;
        hedge= 1;
        x= l;
    }
    if((vedge &gt; 0 || hedge &gt; 0) &amp;&amp; xmovement == 1 &amp;&amp; (obj_mainchara.x != obj_mainchara.xprevious || obj_mainchara.y != obj_mainchara.yprevious)) {
        vspeed= 0;
        hspeed= 0;
        if(vedge == 1 &amp;&amp; hedge == 1) {
            if(shoulddir == 2) vspeed= 4;
            if(shoulddir == 1) hspeed= 4;
            hedge= 0;
            vedge= 0;
        }
        if(vedge == 2 &amp;&amp; hedge == 2) {
            if(shoulddir == 3) hspeed= -4;
            if(shoulddir == 0) vspeed= -4;
            hedge= 0;
            vedge= 0;
        }
        if(vedge == 2 &amp;&amp; hedge == 1) {
            if(shoulddir == 2) vspeed= -4;
            if(shoulddir == 3) hspeed= 4;
            hedge= 0;
            vedge= 0;
        }
        if(vedge == 1 &amp;&amp; hedge == 2) {
            if(shoulddir == 1) hspeed= -4;
            if(shoulddir == 0) vspeed= 4;
            hedge= 0;
            vedge= 0;
        }
        if(hedge == 1 || hedge == 2) {
            vspeed= choose(4, -4);
            hedge= 0;
        }
        if(vedge == 1 || vedge == 2) {
            hspeed= choose(4, -4);
            vedge= 0;
        }
        movement= 0;
        xmovement= 0;
        alarm[0]= 12;
    }
    mykid.x= x;
    mykid.y= y;
    if(mykid.using == 1) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mainchara">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(mykid) myinteract= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
