<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_heart</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.sp= global.asp;
movement= 0;
jumpstage= 0;
hgo= 0;
vgo= 0;
shot= 0;
global.bmenuno= 0;
global.bmenucoord[0]= 0;
global.bmenucoord[1]= 0;
global.bmenucoord[2]= 0;
global.bmenucoord[3]= 0;
global.bmenucoord[4]= 0;
global.bmenucoord[6]= 0;
global.bmenucoord[7]= 0;
global.bmenucoord[8]= 0;
global.bmenucoord[9]= 0;
global.bmenucoord[10]= 0;
global.hurtanim[0]= 0;
global.hurtanim[1]= 0;
global.hurtanim[2]= 0;
global.hurtanim[3]= 0;
global.myfight= 0;
global.mnfight= 0;
global.xpreward[3]= 0;
global.goldreward[3]= 0;
confuse= 0;
charge= 0;
ignore_border= 0;
slam_pain= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.mnfight != 2) movement= 0;
else  {
    if(movement == 0) movement= 1;
}
global.invc--;
if(global.invc &gt; 0 || obj_battlecontroller.runaway == 1)
    image_speed= 0.5;
else  {
    image_index= 0;
    image_speed= 0;
}
charge--;
if(shot == 1 &amp;&amp; keyboard_multicheck_pressed(0/* NOKEY */) &amp;&amp; global.mnfight == 2 &amp;&amp; (instance_number(739) == 0 || charge &lt; 0)) {
    charge= 14;
    instance_create(x + 4, y + 2, 739/* obj_heartshot */);
    snd_play(116/* snd_heartshot */);
}
if(sprite_index == 35) image_angle+= 6;
if(confuse == 1 &amp;&amp; global.mnfight == 2) {
    if(x &lt; obj_lborder.x + 8) x= obj_lborder.x + 8;
    if(y &lt; obj_uborder.x + 8) y= obj_uborder.x + 8;
    if(x &gt; obj_rborder.x - 8) x= obj_rborder.x - 8;
    if(y &gt; obj_dborder.y - 8) y= obj_dborder.y - 8;
}
if(movement == 11) {
    vspeed= 0;
    if(keyboard_check(38/* UP */)) y-= global.sp;
    if(keyboard_check(40/* DOWN */)) y+= global.sp;
    if(keyboard_check(37/* LEFT */) &amp;&amp; jumpstage == 1 &amp;&amp; hspeed == 0) {
        jumpstage= 2;
        hspeed= -6;
    }
}
if(movement == 12) {
    hspeed= 0;
    if(keyboard_check(37/* LEFT */)) x-= global.sp;
    if(keyboard_check(39/* RIGHT */)) x+= global.sp;
    if(keyboard_check(40/* DOWN */) &amp;&amp; jumpstage == 1 &amp;&amp; vspeed == 0) {
        jumpstage= 2;
        vspeed= 6;
    }
}
if(movement == 13) {
    vspeed= 0;
    if(keyboard_check(38/* UP */)) y-= global.sp;
    if(keyboard_check(40/* DOWN */)) y+= global.sp;
    if(keyboard_check(39/* RIGHT */) &amp;&amp; jumpstage == 1 &amp;&amp; hspeed == 0) {
        jumpstage= 2;
        hspeed= 6;
    }
}
if(jumpstage == 2 &amp;&amp; movement == 2) {
    if(global.osflavor == 1 &amp;&amp; keyboard_check_direct(38) == 0 &amp;&amp; vspeed &lt;= -1)
        vspeed= -1;
    if(global.osflavor == 2 &amp;&amp; keyboard_check(38/* UP */) == 0 &amp;&amp; vspeed &lt;= -1)
        vspeed= -1;
    if(vspeed &gt; 0.5 &amp;&amp; vspeed &lt; 8) vspeed+= 0.6;
    if(vspeed &gt; -1 &amp;&amp; vspeed &lt;= 0.5)
        vspeed+= 0.2;
    if(vspeed &gt; -4 &amp;&amp; vspeed &lt;= -1) vspeed+= 0.5;
    if(vspeed &lt;= -4) vspeed+= 0.2;
}
if(jumpstage == 2 &amp;&amp; movement == 11) {
    if(global.osflavor == 1 &amp;&amp; keyboard_check_direct(37) == 0 &amp;&amp; hspeed &lt;= -1)
        hspeed= -1;
    if(global.osflavor == 2 &amp;&amp; keyboard_check(37/* LEFT */) == 0 &amp;&amp; hspeed &lt;= -1)
        hspeed= -1;
    if(hspeed &gt; 0.5 &amp;&amp; hspeed &lt; 8) hspeed+= 0.6;
    if(hspeed &gt; -1 &amp;&amp; hspeed &lt;= 0.5)
        hspeed+= 0.2;
    if(hspeed &gt; -4 &amp;&amp; hspeed &lt;= -1) hspeed+= 0.5;
    if(hspeed &lt;= -4) hspeed+= 0.2;
}
if(jumpstage == 2 &amp;&amp; movement == 12) {
    if(global.osflavor == 1 &amp;&amp; keyboard_check_direct(40) == 0 &amp;&amp; vspeed &gt;= 1)
        vspeed= 1;
    if(global.osflavor == 2 &amp;&amp; keyboard_check(40/* DOWN */) == 0 &amp;&amp; vspeed &gt;= 1)
        vspeed= 1;
    if(vspeed &lt; -0.5 &amp;&amp; vspeed &gt; -8)
        vspeed-= 0.6;
    if(vspeed &lt; 1 &amp;&amp; vspeed &gt;= -0.5)
        vspeed-= 0.2;
    if(vspeed &lt; 4 &amp;&amp; vspeed &gt;= 1) vspeed-= 0.5;
    if(vspeed &gt;= 4) vspeed-= 0.2;
}
if(jumpstage == 2 &amp;&amp; movement == 13) {
    if(global.osflavor == 1 &amp;&amp; keyboard_check_direct(39) == 0 &amp;&amp; hspeed &gt;= 1)
        hspeed= 1;
    if(global.osflavor == 2 &amp;&amp; keyboard_check(39/* RIGHT */) == 0 &amp;&amp; hspeed &gt;= 1)
        hspeed= 1;
    if(hspeed &lt; -0.5 &amp;&amp; hspeed &gt; -8)
        hspeed-= 0.6;
    if(hspeed &lt; 1 &amp;&amp; hspeed &gt;= -0.5)
        hspeed-= 0.2;
    if(hspeed &lt; 4 &amp;&amp; hspeed &gt;= 1) hspeed-= 0.5;
    if(hspeed &gt;= 4) hspeed-= 0.2;
}
if(ignore_border == 0 &amp;&amp; instance_exists(517/* obj_sansb_body */) &amp;&amp; global.mnfight == 2) {
    if(x &lt; global.idealborder[0] + 4) {
        x= global.idealborder[0] + 4;
        event_user(7);
        if(hspeed &lt; 0) hspeed= 0;
        if(movement == 13) jumpstage= 1;
    }
    if(y &lt; global.idealborder[2] + 4) {
        y= global.idealborder[2] + 4;
        event_user(7);
        if(vspeed &lt; 0) vspeed= 0;
        if(movement == 12) jumpstage= 1;
    }
    if(x &gt; global.idealborder[1] - 16) {
        x= global.idealborder[1] - 16;
        event_user(7);
        if(hspeed &gt; 0) hspeed= 0;
        if(movement == 11) jumpstage= 1;
    }
    if(y &gt; global.idealborder[3] - 16) {
        y= global.idealborder[3] - 16;
        event_user(7);
        if(vspeed &gt; 0) vspeed= 0;
        if(movement == 2) jumpstage= 1;
    }
}
if(instance_exists(154/* obj_battlecontroller */) &amp;&amp; obj_battlecontroller.runaway == 1 &amp;&amp; x &lt; -20) {
    if(!instance_exists(149/* obj_unfader */)) instance_create(0, 0, 149/* obj_unfader */);
    if(x &lt; -60) {
        if(global.flag[15] == 0) {
            caster_stop(global.batmusic);
            caster_free(global.batmusic);
        }
        room_goto(global.currentroom);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_uborder">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(ignore_border == 0) {
    if(movement == 2 &amp;&amp; vspeed &lt; 0) vspeed= 0;
    if(movement == 12) {
        y= global.idealborder[2] + 4;
        event_user(7);
        if(vspeed &lt; 0) vspeed= 0;
        if(movement == 12) jumpstage= 1;
    }
    y= other.y + other.sprite_height;
    if(confuse == 1 &amp;&amp; obj_battlecontroller.runaway != 1)
        y= other.y + other.sprite_height + 8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_rborder">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(ignore_border == 0) {
    if(movement == 11) {
        x= global.idealborder[1] - 16;
        event_user(7);
        if(hspeed &gt; 0) hspeed= 0;
        if(movement == 11) jumpstage= 1;
    }
    x= other.x - sprite_width;
    if(confuse == 1 &amp;&amp; obj_battlecontroller.runaway != 1)
        x= other.x - 8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lborder">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(ignore_border == 0) {
    if(movement == 13) {
        x= global.idealborder[0] + 4;
        event_user(7);
        if(hspeed &lt; 0) hspeed= 0;
        jumpstage= 1;
    }
    if(obj_battlecontroller.runaway != 1)
        x= other.x + other.sprite_width;
    if(confuse == 1 &amp;&amp; obj_battlecontroller.runaway != 1)
        x= other.x + other.sprite_width + 8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_dborder">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(ignore_border == 0) {
    y= other.y - sprite_height;
    if(movement == 2) {
        event_user(7);
        jumpstage= 1;
        vspeed= 0;
    }
    if(confuse == 1 &amp;&amp; obj_battlecontroller.runaway != 1)
        y= other.y - 8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movement == 1) {
    if(confuse == 0) {
        y+= global.sp;
        if(keyboard_multicheck(16/* SHIFT */) == 1)
            y-= global.sp / 2;
    }
    if(confuse == 1 &amp;&amp; y &gt; global.idealborder[2] + 8) {
        y-= global.sp;
        if(keyboard_multicheck(16/* SHIFT */) == 1)
            y+= global.sp / 2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movement == 1 || movement == 2) {
    if(confuse == 0) {
        x+= global.sp;
        if(keyboard_multicheck(16/* SHIFT */) == 1)
            x-= global.sp / 2;
    }
    if(confuse == 1 &amp;&amp; x &gt; global.idealborder[0] + 8) {
        x-= global.sp;
        if(keyboard_multicheck(16/* SHIFT */) == 1)
            x+= global.sp / 2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movement == 1) {
    if(confuse == 0) {
        y-= global.sp;
        if(keyboard_multicheck(16/* SHIFT */) == 1)
            y+= global.sp / 2;
    }
    if(confuse == 1 &amp;&amp; y &lt; global.idealborder[3] - 8) {
        y+= global.sp;
        if(keyboard_multicheck(16/* SHIFT */) == 1)
            y-= global.sp / 2;
    }
}
if(movement == 2 &amp;&amp; jumpstage == 1 &amp;&amp; vspeed == 0) {
    jumpstage= 2;
    vspeed= -6;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movement == 1 || movement == 2) {
    if(confuse == 0) {
        x-= global.sp;
        if(keyboard_multicheck(16/* SHIFT */) == 1)
            x+= global.sp / 2;
    }
    if(confuse == 1 &amp;&amp; x &lt; global.idealborder[1] - 8) {
        x+= global.sp;
        if(keyboard_multicheck(16/* SHIFT */) == 1)
            x+= global.sp / 2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(speed &gt; 10) {
    snd_stop(53);
    snd_stop(21);
    if(slam_pain == 1 &amp;&amp; global.hp &gt; 1) global.hp--;
    snd_play(53/* snd_hurt1 */);
    snd_play(21/* snd_impact */);
    s_s= instance_create(0, 0, 512/* obj_sans_shaker */);
    s_s.intensity= floor(speed / 3);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
