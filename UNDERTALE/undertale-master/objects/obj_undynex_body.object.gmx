<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_undynex_example</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner= 0;
eyetimer= 0;
eye_on= 0;
slashno= 0;
movetype= 0;
larm= instance_create(x + 64, y + 78, 1363/* obj_npc_marker */);
larm.sprite_index= 312/* spr_undynex_leftarm */;
larm.image_xscale= 2;
larm.image_yscale= 2;
larm.depth= 7;
arm_v= 0;
larm.visible= 0;
facetype= 0;
heady= 0;
pause= 0;
shakify= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>slashno++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movetype == 0) movetype= 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(movetype == 2) {
    larm.visible= 1;
    if(slashno == 0 &amp;&amp; larm.image_angle &gt; -104) {
        facetype= 1;
        larm.image_angle-= 35;
        larm.x-= 4;
        larm.y-= 4;
        heady-= 2;
    }
    if(slashno == 0 &amp;&amp; larm.image_angle &lt;= -104) {
        larm.image_angle= -104;
        alarm[1]= 5;
        slashno= 0.1;
    }
    if(slashno == 1.1) {
        slashno= 1;
        alarm[1]= 2;
    }
    if(slashno == 1) {
        facetype= 0;
        larm.depth= 4;
        larm.image_angle+= 73.3333333333333;
    }
    if(slashno == 2) {
        larm.x= larm.xstart;
        larm.y= larm.ystart;
        larm.image_angle= 66;
        slash= instance_create(larm.x - 180, larm.y + 20, 1363/* obj_npc_marker */);
        slash.sprite_index= 280/* spr_undyneb_smear */;
        slash.visible= 1;
        slash.image_alpha= 1;
        slash2= instance_create(larm.x - 180, larm.y + 20, 1363/* obj_npc_marker */);
        slash2.sprite_index= 280/* spr_undyneb_smear */;
        slash2.visible= 1;
        slash2.image_alpha= 1;
        slashno= 3;
    }
    if(slashno == 3) {
        if(heady &lt; 6) heady+= 3;
        slash.image_alpha-= 0.1;
        slash2.image_alpha-= 0.1;
        slash2.y+= 24;
        larm.image_angle+= 0.5;
        if(larm.image_angle &gt; 70) {
            with(slash) instance_destroy();
            with(slash2) instance_destroy();
            slashno= 4;
            alarm[1]= 3;
        }
    }
    if(slashno == 5) {
        if(heady &gt; 0) heady--;
        larm.image_angle-= 15;
        if(larm.image_angle &lt;= 6) {
            heady= 0;
            larm.depth= 7;
            larm.image_angle= 0;
            slashno= 0;
            movetype= 0;
            arm_v= 0;
            larm.visible= 0;
        }
    }
}
siner+= 1.4;
if(pause == 1) siner= 0;
s_f= sin(siner / 6);
s_f2= sin(siner / 3);
s_f3= sin(siner / 14);
draw_sprite_ext(308/* spr_undynex_hair */, 0, x + 85, y + s_f * 3 + heady + 4, 2, 2, 70 - s_f * 15, 16777215, 1);
draw_sprite_ext(311/* spr_undynex_legs */, 0, x + 100, y + 164, 2, 2, 0, 16777215, 1);
if(arm_v == 0)
    draw_sprite_ext(312/* spr_undynex_leftarm */, 0, x + 64 + s_f * 5, y + 78 + s_f * 5, 2, 2, 0, 16777215, 1);
draw_sprite_ext(313/* spr_undynex_rightarm */, 0, x + 136 + s_f2 * 3, y + 78 + s_f * 6 + s_f2 * 2, 2, 2, 0, 16777215, 1);
draw_sprite_ext(309/* spr_undynex_torso */, 0, x + 100, y + 78 + s_f * 4, 2, 2, -(s_f * 4), 16777215, 1);
draw_sprite_ext(310/* spr_undynex_pants */, 0, x + 100, y + 122 + s_f * 2, 2, 2, s_f * 2, 16777215, 1);
if(facetype == 0) {
    if(pause == 0)
        draw_sprite_ext(303/* spr_undynex_face1 */, floor(siner / 3), x + 100, y + 28 + s_f * 2 + heady, 2, 2, 0, 16777215, 1);
    if(pause == 1)
        draw_sprite_ext(305/* spr_undynex_face_damage */, floor(siner / 3), x + 100, y + 28 + s_f * 2 + heady, 2, 2, 0, 16777215, 1);
}
if(facetype == 1)
    draw_sprite_ext(306/* spr_undynex_face_laugh */, floor(siner / 3), x + 100, y + 28 + s_f * 2 + heady, 2, 2, 0, 16777215, 1);
if(facetype == 2)
    draw_sprite_ext(304/* spr_undynex_face_e */, global.faceemotion, x + 100, y + 28 + s_f * 2 + heady, 2, 2, 0, 16777215, 1);
if(facetype != 0) eyetimer= 0;
eyetimer++;
if(eyetimer &gt;= 10) {
    draw_sprite_ext(302/* spr_undynex_eyebeam */, 0, x + 110, y + 24 + s_f * 2, (eyetimer - 10) / 4, 2.5 - (eyetimer - 10) / 20, -(s_f3 * 32), 16777215, 1.5 - (eyetimer - 10) / 20);
    if(eyetimer &gt;= 40) eyetimer= 0;
}
if(movetype == 2) arm_v= 1;
if(shakify &gt; 0) {
    x= xstart + random(shakify) - random(shakify);
    y= ystart + random(shakify) - random(shakify);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
