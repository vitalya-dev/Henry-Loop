<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_undynea_d</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_depth(0, 0, 0, 0, 0);
image_speed= 0.334;
dsprite= 1446;
usprite= 1466;
lsprite= 1455;
rsprite= 1458;
dtsprite= 1454;
utsprite= 1468;
ltsprite= 1457;
rtsprite= 1459;
myinteract= 0;
facing= 0;
fun= 0;
npcdir= 0;
d= 0;
xhome= xstart;
yhome= ystart;
hhspeed= 0;
vhspeed= 0;
scrollspeed= 0.8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(d == 0) scr_depth();
if(fun == 0) {
    myinteract= 0;
    if(hhspeed == 0 &amp;&amp; vhspeed == 0) {
        image_index= 0;
        image_speed= 0;
    }
    if(abs(hhspeed) &gt; 0 || abs(vhspeed) &gt; 0) {
        image_speed= 0.2;
        if(image_index == 1 || image_index == 3) snd_play(16/* snd_undynestep */);
    }
}
gg= room_width - view_wview[0];
hh= room_height - view_hview[0];
if(view_xview[0] &gt;= 0) {
    x= xhome + floor(view_xview[0] - view_xview[0] * scrollspeed);
    g= x - xprevious;
}
if(view_xview[0] &gt;= gg) {
    x= xhome + floor(gg - gg * scrollspeed);
    g= x - xprevious;
}
if(view_yview[0] &gt;= 0)
    y= yhome + floor(view_yview[0] - view_yview[0] * scrollspeed);
if(view_yview[0] &gt;= hh)
    y= yhome + floor(hh - hh * scrollspeed);
xhome+= hhspeed;
yhome+= vhspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[6]= 3;
grandv= 0;
up= 1;
xm= 0;
ym= 0;
pd= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
