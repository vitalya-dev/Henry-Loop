<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_finalknight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>8</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner= 0;
anim_e= 0;
anim_e2= 0;
anim_l= 0;
anim_l2= 0;
anim_l3= 0;
anim_h= 0;
anim_h2= 0;
anim_m= 0;
anim_m2= 0;
anime= 0;
pause= 0;
asleep= 0;
offx= -60;
offy= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>siner++;
if(pause == 1) {
    alarm[0]++;
    siner= 0;
    x= parent.x + 60;
}
anim_e++;
if(anim_e &gt; 30 &amp;&amp; anim_e &lt; 60) anim_e2++;
if(anim_e &gt; 180) {
    anim_e2= 0;
    anim_e= 0;
}
anim_l++;
if(anim_l &gt;= 60 &amp;&amp; anim_l &lt; 120)
    anim_l2-= 0.5;
if(anim_l &gt;= 150 &amp;&amp; anim_l &lt; 300) {
    anim_l2+= 6;
    if(anim_l2 &gt;= 0) {
        anim_l2= 0;
        anim_l= 300;
    }
}
if(anim_l &gt;= 300) {
    if(anim_l2 == 0) {
        anim_l3= 0;
        anim_l2= -3;
    } else  {
        anim_l2= 0;
        if(anim_l3 == 0) anim_l3= choose(-1, 1);
    }
}
if(anim_l &gt; 310) {
    anim_l3= 0;
    anim_l2= 0;
    anim_l= 0;
}
anim_h++;
if(anim_h &gt; 50 &amp;&amp; anim_h &lt; 75) anim_h2++;
if(anim_h &gt; 100) anim_h= 0;
anim_m++;
if(anim_m &gt; 150 &amp;&amp; anim_m &lt; 180) anim_m2++;
if(anim_m &gt; 240 &amp;&amp; anim_m &lt; 270) anim_m2++;
if(anim_m &gt; 300) {
    anim_m= 0;
    anim_m2= 0;
}
if(pause == 0) {
    if(asleep == 0)
        draw_sprite_ext(457/* spr_finalknight_dragoneyes */, anim_e2 / 3, offx + x + 94 + sin(siner / 10) * 6, offy + y + 70, 2, 2, 0, 16777215, 1);
    if(asleep == 1)
        draw_sprite_ext(458/* spr_finalknight_dragoneyes_tired */, anim_e2 / 3, offx + x + 94 + sin(siner / 10) * 6, offy + y + 70, 2, 2, 0, 16777215, 1);
    if(asleep == 2)
        draw_sprite_ext(459/* spr_finalknight_dragoneyes_asleep */, anim_e2 / 3, offx + x + 94 + sin(siner / 10) * 6, offy + y + 70, 2, 2, 0, 16777215, 1);
}
draw_sprite_ext(467/* spr_finalknight_body */, 0, offx + x, offy + y, 2, 2, 0, 16777215, 1);
if(pause == 0) {
    if(asleep != 2)
        draw_sprite_ext(460/* spr_finalknight_helmet */, anim_h2 / 4, offx + x + 70, offy + y + 2, 2, 2, 0, 16777215, 1);
    if(asleep == 2)
        draw_sprite_ext(460/* spr_finalknight_helmet */, 0, offx + x + 70, offy + y + 2, 2, 2, 0, 16777215, 1);
} else 
    draw_sprite_ext(461/* spr_finalknight_helmethurt */, 0, offx + x + 70, offy + y + 2, 2, 2, 0, 16777215, 1);
if(pause == 0) {
    if(asleep == 0)
        draw_sprite_ext(462/* spr_finalknight_dragonmouth */, anim_m2 / 6, offx + x + 98, offy + y + 84, 2, 2, 0, 16777215, 1);
    if(asleep == 1)
        draw_sprite_ext(464/* spr_finalknight_dragonmouth_tired */, anim_m2 / 6, offx + x + 98, offy + y + 84, 2, 2, 0, 16777215, 1);
    if(asleep == 2)
        draw_sprite_ext(465/* spr_finalknight_dragonmouth_asleep */, anim_m2 / 6, offx + x + 98, offy + y + 84, 2, 2, 0, 16777215, 1);
} else 
    draw_sprite_ext(463/* spr_finalknight_dragonmouth_hurt */, 0, offx + x + 98, offy + y + 84, 2, 2, 0, 16777215, 1);
draw_sprite_ext(466/* spr_finalknight_dragonfur */, siner / 5, offx + x + 64, offy + y + 96, 2, 2, 0, 16777215, 1);
draw_sprite_ext(456/* spr_finalknight_leftarm */, 0, offx + x + anim_l3, offy + y + anim_l2, 2, 2, 0, 16777215, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
