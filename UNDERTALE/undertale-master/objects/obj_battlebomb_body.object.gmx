<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_battlebomb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sha= 0;
image_xscale= 2;
image_yscale= 2;
type= 0;
siner= 0;
blenda= 16777215;
blendb= 32768;
coolwidth= 30;
got= 0;
myspeed= 10;
// obj_battlebg
with(185) instance_destroy();
defuse= 0;
image_speed= 0.1;
movetimer= 0;
cc= 0;
dd= 0;
flash= 0;
flasher= 0;
shudder= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>got= 0;
if(collision_rectangle(320 - coolwidth, 80, 320 + coolwidth, global.idealborder[2] - 10, object_index, 0, 0)) {
    blenda= 65535;
    if(defuse == 1) blenda= 65280;
    blendb= 65280;
    got= 1;
}
dd= 0;
if(flash == 1) {
    flasher++;
    if(flasher == 1) {
        if(defuse == 0) snd_play(31/* snd_break1 */);
        if(defuse == 1) {
            snd_play(30/* snd_break2 */);
            instance_create(0, 0, 118/* obj_flasher */);
        }
    }
    if(flasher == 1 || flasher == 2 || flasher == 3 || flasher == 4 || flasher == 5)
        dd= 1;
    if(flasher &gt; 16) {
        flasher= 0;
        flash= 0;
        dd= 0;
    }
}
draw_set_color(blendb);
if(dd == 1)
    draw_rectangle(320 - coolwidth, 80, 320 + coolwidth, global.idealborder[2] - 10, 0);
if(dd == 0)
    draw_rectangle(320 - coolwidth, 80, 320 + coolwidth, global.idealborder[2] - 10, 1);
draw_rectangle(320 - coolwidth - 2, 82, 320 + coolwidth + 2, global.idealborder[2] - 12, 1);
draw_rectangle(320 - coolwidth - 4, 84, 320 + coolwidth + 4, global.idealborder[2] - 14, 1);
draw_sprite_ext(sprite_index, image_index, x, y, 2, 2, 0, blenda, 1);
draw_sprite_ext(491/* spr_defusebox */, 0, 320, 30, 2, 2, 0, blendb, 1);
blenda= 16777215;
blendb= 32768;
if(type == 0) {
    if(hspeed == 0) hspeed= myspeed;
    if(x &gt; 560) {
        x-= 15;
        hspeed= -myspeed;
    }
    if(x &lt; 20) {
        x+= 15;
        hspeed= myspeed;
    }
}
if(type == 1) {
    myspeed= 4;
    siner++;
    x+= sin(siner / 3) * 3;
    y+= cos(siner / 4) * 3;
    if(hspeed == 0) hspeed= myspeed;
    if(x &gt; 400) {
        x-= 6;
        hspeed= -myspeed;
    }
    if(x &lt; 180) {
        x+= 6;
        hspeed= myspeed;
    }
}
if(type == 2) {
    myspeed= 15;
    if(hspeed == 0) hspeed= myspeed;
    if(x &gt; 660) {
        x= 0;
        if(myspeed &gt; 5) myspeed-= 0.5;
    }
}
if(type == 3) {
    if(cc == 0) {
        cc= 1;
        x= 40;
        startx= x;
    }
    movetimer++;
    if(movetimer &lt; 80) {
        myspeed= 10;
        hspeed= myspeed;
        if(x &gt;= 320 - coolwidth - 110) {
            hspeed= 0;
            movetimer+= 10;
        }
    }
    if(movetimer &gt; 80 &amp;&amp; movetimer &lt;= 160) {
        myspeed= 5;
        hspeed= -myspeed;
        if(x &lt; 80) movetimer+= 10;
    }
    if(movetimer &gt; 160 &amp;&amp; movetimer &lt; 240) {
        myspeed= 13;
        hspeed= myspeed;
        if(x &gt; 500) movetimer+= 20;
    }
    if(movetimer &gt; 240 &amp;&amp; movetimer &lt; 320) {
        myspeed= -10;
        hspeed= myspeed;
        if(x &lt;= 320 + coolwidth + 10) {
            hspeed= 0;
            movetimer+= 20;
        }
    }
    if(movetimer &gt; 320 &amp;&amp; movetimer &lt; 400) {
        myspeed= 5;
        hspeed= myspeed;
        if(x &gt; 440) movetimer+= 20;
    }
    if(movetimer &gt; 400 &amp;&amp; movetimer &lt; 480) {
        myspeed= -13;
        hspeed= myspeed;
        if(x &lt;= startx + 10) movetimer= 500;
    }
    if(movetimer &gt; 480) {
        x= startx;
        movetimer= 0;
        hspeed= 0;
        myspeed= 0;
    }
}
if(type == 4) {
    siner++;
    x= 260 + sin(siner / 20) * 180;
    y= ystart + cos(siner / 3) * 60;
}
if(type == 5) {
    vspeed= -25;
    if(y &lt; -120) y= 930;
}
if(type == 5) {
    if(cc == 0) {
        x-= 90;
        cc= 1;
    }
    vspeed= -20;
    if(y &lt; -120) y= 860;
}
if(type == 6) {
    if(cc == 0) {
        cc= 1;
        x= 320 - coolwidth - sprite_width - 10;
        startx= x;
    }
    movetimer++;
    if(movetimer &gt; 25 &amp;&amp; movetimer &lt; 60) {
        hspeed= 16;
        if(x &gt; 320 + coolwidth + 10) movetimer= 100;
    }
    if(movetimer &gt;= 100 &amp;&amp; movetimer &lt; 125) hspeed= 0;
    if(movetimer &gt; 125 &amp;&amp; movetimer &lt; 180) {
        hspeed= -16;
        if(x &lt;= startx) {
            hspeed= 0;
            movetimer= 0;
        }
    }
}
if(defuse == 1) {
    if(sprite_index == 492) sprite_index= 493/* spr_battlebomb_defuse */;
    if(sprite_index == 1519) sprite_index= 1520/* spr_tobdogl */;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
