<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>range= 1;
timer= 9;
col= 16777215;
siner= 0;
beamtime= 10;
targetx= obj_heart.x;
targety= obj_heart.y;
home= 0;
beamsfx= caster_load("music/sfx/sfx_rainbowbeam_1.ogg");
beamsfx2= caster_load("music/sfx/sfx_rainbowbeam_hold.ogg");
last= 300;
hits= 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>caster_free(beamsfx);
caster_free(beamsfx2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>snd_play(53/* snd_hurt1 */);
if(!instance_exists(184/* obj_shaker */)) instance_create(0, 0, 184/* obj_shaker */);
if(hits == 0) global.hp= 1;
if(hits == 1) global.hp= 1;
if(hits == 2) global.hp= 0.9;
if(hits == 3) global.hp= 0.5;
if(hits == 4) global.hp= 0.1;
if(hits == 5) global.hp= 0.01;
if(hits == 6) global.flag[509]= 1;
if(hits == 7) global.flag[509]= 2;
if(hits == 8) global.flag[509]= 3;
if(hits == 9) global.flag[509]= 4;
hits++;
alarm[5]= 40;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer++;
siner++;
col= make_color_hsv(siner * 11, 190, 250);
col2= make_color_hsv((siner + 3) * 11, 190, 250);
col3= make_color_hsv((siner + 5) * 11, 140, 250);
if(timer == beamtime) {
    hits= 0;
    alarm[5]= 1;
    obj_btparent.depth= -2000;
    depth= -1000;
    obj_heart.depth= -2100;
    shaken= 0;
    menu[0]= 750;
    menux[0]= obj_fightbt.x;
    menuy[0]= obj_fightbt.y;
    menu[1]= 752;
    menux[1]= obj_itembt.x;
    menuy[1]= obj_itembt.y;
    menu[2]= 754;
    menux[2]= obj_sparebt.x;
    menuy[2]= obj_sparebt.y;
    svol1= 0.8;
    svol2= 0;
    s1= caster_play(beamsfx, svol1, 1);
    s2= caster_loop(beamsfx2, 1, 1);
    ar= 0.7;
    bw= 60;
    if(range == 1) bw= 220;
    if(range == 2) bw= 120;
    mbw= bw;
    bw= 0;
}
if(timer &gt; beamtime) {
    if(timer &lt; beamtime + 6) bw+= mbw / 5;
    if(bw &gt; 0) {
        if(svol2 &lt; 0.8) svol2+= 0.05;
        caster_set_volume(s2, svol2);
        ob= sin(siner / 2) * mbw / 5 * bw / mbw;
        draw_set_alpha(ar);
        if(home == 0) {
            draw_triangle_color(x, y, x + bw + ob, room_height + 10, x - bw - ob, room_height + 10, col, col2, col2, 0);
            draw_triangle_color(x, y, x + bw + ob / 2, room_height + 10, x - bw - ob / 2, room_height + 10, col, col2, col2, 0);
            draw_triangle_color(x, y, x + bw - ob, room_height + 10, x - bw + ob, room_height + 10, col, col3, col3, 0);
            draw_sprite_ext(2393/* spr_beamcircle */, 0, x, y, (7 + sin(siner / 2) * 3.75) * bw / mbw, (7 + sin(siner / 2) * 3.75) * bw / mbw, 0, col, ar);
            draw_sprite_ext(2393/* spr_beamcircle */, 0, x, y, (6 + sin(siner / 2) * 2.5) * bw / mbw, (6 + sin(siner / 2) * 2.5) * bw / mbw, 0, col, ar);
            draw_sprite_ext(2393/* spr_beamcircle */, 0, x, y, (5 + sin(siner / 2)) * bw / mbw, (5 + sin(siner / 2)) * bw / mbw, 0, col2, ar);
        }
        if(home == 1) {
            targetx= mouse_x;
            targety= mouse_y;
            tt= lengthdir_x(600, point_direction(x, y, targetx, targety));
            tt2= lengthdir_y(600, point_direction(x, y, targetx, targety));
            draw_line_width_color(x, y, x + tt, y + tt2, bw + ob * 2, col, col2);
            draw_line_width_color(x, y, x + tt, y + tt2, bw + ob, col, col2);
            draw_line_width_color(x, y, x + tt, y + tt2, bw, col, col3);
            factor= mbw / 60;
            draw_sprite_ext(2393/* spr_beamcircle */, 0, x, y, (7 + sin(siner / 2) * 3) * bw / mbw * factor, (7 + sin(siner / 2) * 3) * bw / mbw * factor, 0, col, ar);
            draw_sprite_ext(2393/* spr_beamcircle */, 0, x, y, (6 + sin(siner / 2) * 2) * bw / mbw * factor, (6 + sin(siner / 2) * 2) * bw / mbw * factor, 0, col, ar);
            draw_sprite_ext(2393/* spr_beamcircle */, 0, x, y, (5 + sin(siner / 2)) * bw / mbw * factor, (5 + sin(siner / 2)) * bw / mbw * factor, 0, col2, ar);
        }
        if(last &gt; 0 &amp;&amp; timer == 120) {
            shaken= 1;
            bw+= 100;
            mbw+= 80;
            caster_set_pitch(s2, 1.3);
            blcon= instance_create(400, 50, 187/* obj_blconwdflowey */);
            global.msc= 0;
            global.msg[0]= "STOP IT!!";
            global.typer= 88;
            blconwd= instance_create(blcon.x + 25, blcon.y + 10, 784/* OBJ_NOMSCWRITER */);
            blcon.depth= -2000;
            blconwd.depth= -2200;
        }
        if((timer == 190 || timer == 340) &amp;&amp; last &gt; 0) {
            with(blcon) instance_destroy();
            with(blconwd) instance_destroy();
        }
        if(last &gt; 0 &amp;&amp; timer == 240) {
            shaken= 2;
            bw+= 400;
            mbw+= 260;
            caster_set_pitch(s2, 1.8);
            blcon= instance_create(400, 50, 187/* obj_blconwdflowey */);
            global.msc= 0;
            global.msg[0]= "STOP IT NOW!!!";
            global.typer= 88;
            blconwd= instance_create(blcon.x + 25, blcon.y + 10, 784/* OBJ_NOMSCWRITER */);
            blcon.depth= -2000;
            blconwd.depth= -2200;
        }
        if(shaken == 1) {
            i= 0;
            while(i &lt; 3) {
                menu[i].x= menux[i] + random(4) - random(4);
                menu[i].y= menuy[i] + random(4) - random(4);
                i++;
            }
        }
        if(shaken == 2) {
            i= 0;
            while(i &lt; 3) {
                menu[i].vspeed+= 0.5;
                menu[i].image_angle+= random(4) - random(4);
                i++;
            }
            global.bmenucoord[0]= 1;
            global.mercy= 3;
        }
        draw_set_alpha(1);
        if(timer &gt; beamtime + 80 + last) {
            if(svol2 &gt; 0) svol2-= 0.1;
            caster_set_volume(s2, svol2);
            bw-= mbw / 12;
            ar-= 0.04;
            if(bw &lt;= 0) {
                caster_stop(s2);
                global.mnfight= 3;
                global.msg[0]= "* ...";
                instance_destroy();
            }
        }
    }
}
scr_binfowrite();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
